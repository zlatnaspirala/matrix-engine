!function o(i,a,n){function s(e,t){if(!a[e]){if(!i[e]){var r="function"==typeof require&&require;if(!t&&r)return r(e,!0);if(l)return l(e,!0);throw(r=new Error("Cannot find module '"+e+"'")).code="MODULE_NOT_FOUND",r}r=a[e]={exports:{}},i[e][0].call(r.exports,function(t){return s(i[e][1][t]||t)},r,r.exports,o,i,a,n)}return a[e].exports}for(var l="function"==typeof require&&require,t=0;t<n.length;t++)s(n[t]);return s}({1:[function(t,e,r){"use strict";Object.defineProperty(r,"__esModule",{value:!0}),r.default=void 0;var o,i=function(t,e){if(!e&&t&&t.__esModule)return t;if(null===t||"object"!=typeof t&&"function"!=typeof t)return{default:t};e=n(e);if(e&&e.has(t))return e.get(t);var r,o={},i=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(r in t){var a;"default"!==r&&Object.prototype.hasOwnProperty.call(t,r)&&((a=i?Object.getOwnPropertyDescriptor(t,r):null)&&(a.get||a.set)?Object.defineProperty(o,r,a):o[r]=t[r])}o.default=t,e&&e.set(t,o);return o}(t("./index.js")),a=t("./apps/adding_color_piramyde");function n(t){if("function"!=typeof WeakMap)return null;var e=new WeakMap,r=new WeakMap;return(n=function(t){return t?r:e})(t)}var s=i.App;i.Engine.load_shaders("shaders/shaders.html"),"serviceWorker"in navigator?window.addEventListener("load",function(t){s.ready=!0,i.Engine.initApp(webGLStart)}):console.warn("Matrix Engine: No support for web workers in this browser."),window.webGLStart=()=>{(o=i.matrixWorld.defineworld(canvas)).callReDraw(),window.world=o,window.App=s,window.runThis=a.runThis,i.utility.E("debugBox").style.display="block",setTimeout(()=>{(0,a.runThis)(o)},250)};s=(window.matrixEngine=i).App;r.default=s},{"./apps/adding_color_piramyde":2,"./index.js":3}],2:[function(t,e,r){"use strict";Object.defineProperty(r,"__esModule",{value:!0}),r.runThis=void 0;var o,i=(o=t("../program/manifest"))&&o.__esModule?o:{default:o};r.runThis=t=>{t.Add("pyramid",1,"MyPyramid1"),t.Add("pyramid",1,"MyPyramid2"),t.Add("pyramid",1,"MyPyramid3"),i.default.scene.MyPyramid1.position.SetX(2.5),i.default.scene.MyPyramid2.position.SetX(0),i.default.scene.MyPyramid3.position.SetX(-2.5),canvas.addEventListener("mousedown",t=>{matrixEngine.raycaster.checkingProcedure(t)}),addEventListener("ray.hit.event",function(t){console.info(t.detail)})}},{"../program/manifest":16}],3:[function(t,e,r){"use strict";Object.defineProperty(r,"__esModule",{value:!0}),Object.defineProperty(r,"App",{enumerable:!0,get:function(){return o.default}}),Object.defineProperty(r,"OBJ",{enumerable:!0,get:function(){return a.default}}),Object.defineProperty(r,"operation",{enumerable:!0,get:function(){return n.default}}),Object.defineProperty(r,"texTools",{enumerable:!0,get:function(){return s.default}}),r.raycaster=r.utility=r.Events=r.Engine=r.matrixRender=r.matrixGeometry=r.matrixWorld=void 0;var o=h(t("./program/manifest")),i=d(t("./lib/matrix-world"));r.matrixWorld=i;i=d(t("./lib/matrix-geometry"));r.matrixGeometry=i;i=d(t("./lib/matrix-render"));r.matrixRender=i;i=d(t("./lib/engine"));r.Engine=i;i=d(t("./lib/events"));r.Events=i;var a=h(t("./lib/loader-obj")),n=h(t("./lib/matrix-buffers")),s=h(t("./lib/matrix-textures")),i=d(t("./lib/utility"));r.utility=i;t=d(t("./lib/raycast"));function l(t){if("function"!=typeof WeakMap)return null;var e=new WeakMap,r=new WeakMap;return(l=function(t){return t?r:e})(t)}function d(t,e){if(!e&&t&&t.__esModule)return t;if(null===t||"object"!=typeof t&&"function"!=typeof t)return{default:t};e=l(e);if(e&&e.has(t))return e.get(t);var r,o,i={},a=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(r in t)"default"!==r&&Object.prototype.hasOwnProperty.call(t,r)&&((o=a?Object.getOwnPropertyDescriptor(t,r):null)&&(o.get||o.set)?Object.defineProperty(i,r,o):i[r]=t[r]);return i.default=t,e&&e.set(t,i),i}function h(t){return t&&t.__esModule?t:{default:t}}r.raycaster=t},{"./lib/engine":4,"./lib/events":5,"./lib/loader-obj":6,"./lib/matrix-buffers":7,"./lib/matrix-geometry":9,"./lib/matrix-render":10,"./lib/matrix-textures":11,"./lib/matrix-world":12,"./lib/raycast":13,"./lib/utility":14,"./program/manifest":16}],4:[function(t,e,o){"use strict";Object.defineProperty(o,"__esModule",{value:!0}),o.modifyLooper=function(t){o.looper=L=t},o.resizeView=x,o.initApp=function(t){x(),w(),window.canvas=document.getElementById("canvas"),1==a.default.events&&null===p&&(o.EVENTS_INSTANCE=p=new i.EVENTS((0,n.E)("canvas")));void 0!==t&&(window.webGLStartCallBack=t)()},o.isReady=function(){return 0!=world},o.load_shaders=function(t){var e=new XMLHttpRequest;e.onload=function(){200==this.status&&null!=this.responseText?document.getElementById("shaders").innerHTML=this.responseText:console.warn("Something went wrong on shaders load procces!")},e.open("GET",t,!0),e.send()},o.loadHtmlPowerAsset=function(t,e){var r=new XMLHttpRequest;r.onload=function(){200==this.status&&null!=this.responseText&&(document.getElementById("media-holder").innerHTML=this.responseText,void 0!==e&&e())},r.open("GET",t,!0),r.send()},o.defineWebGLWorld=function(t){var e=new Object;try{var r=s.WebGLUtils.setupWebGL(canvas);r.viewportWidth=canvas.width,r.viewportHeight=canvas.height,e.gl=r}catch(t){}return e.destroy=function(){delete this.gl},e},o.updateFPS=function(t){var e=(new Date).getTime(),r=e-g;o.lastTime=g=e,o.totalTime=m+=r,o.updateTime=f+=r,(0,d.modifyFrames)(d.frames+1),o.updateFrames=c+=1,1e3<f&&(document.getElementById("fps").innerHTML="FPS AVG:"+Math.floor(1e3*d.frames/m/t)+" CUR:"+Math.floor(1e3*c/f/t+" matrixEngine"),o.updateTime=f=0,o.updateFrames=c=0)},o.drawCanvas=w,o.degToRad=function(t){return t*Math.PI/180},o.initiateFPS=function(){o.lastTime=g=(new Date).getTime()},o.onExit=E,o.loadShaders=function(t,e){var r,e=document.getElementById(e),o="";{if(e){for(var i=e.firstChild;i;)3==i.nodeType&&(o+=i.textContent),i=i.nextSibling;if("x-shader/x-fragment"==e.type)r=t.createShader(t.FRAGMENT_SHADER);else{if("x-shader/x-vertex"!=e.type)return 0;r=t.createShader(t.VERTEX_SHADER)}return t.shaderSource(r,o),t.compileShader(r),t.getShaderParameter(r,t.COMPILE_STATUS)?r:0}return 0}},o.initShaders=function(t,e,r){var o=this.getShader(t,e),e=this.getShader(t,r);{if(0==o||0==e)return 0;r=t.createProgram();return t.attachShader(r,e),t.attachShader(r,o),t.linkProgram(r),t.getProgramParameter(r,t.LINK_STATUS)?(t.useProgram(r),r.vertexPositionAttribute=t.getAttribLocation(r,"aVertexPosition"),t.enableVertexAttribArray(r.vertexPositionAttribute),0<=t.getAttribLocation(r,"aVertexColor")&&(r.vertexColorAttribute=t.getAttribLocation(r,"aVertexColor"),t.enableVertexAttribArray(r.vertexColorAttribute)),0<=t.getAttribLocation(r,"aTextureCoord")&&(r.textureCoordAttribute=t.getAttribLocation(r,"aTextureCoord"),t.enableVertexAttribArray(r.textureCoordAttribute),r.samplerUniform=t.getUniformLocation(r,"uSampler")),0<=t.getAttribLocation(r,"aVertexNormal")&&(r.vertexNormalAttribute=t.getAttribLocation(r,"aVertexNormal"),t.enableVertexAttribArray(r.vertexNormalAttribute)),null!==t.getUniformLocation(r,"uNMatrix")&&(r.nMatrixUniform=t.getUniformLocation(r,"uNMatrix")),null!==t.getUniformLocation(r,"layer")&&(r.layerLocation=t.getUniformLocation(r,"layer")),null!==t.getUniformLocation(r,"numberOfsamplers")&&(r.numberOfsamplers=t.getUniformLocation(r,"numberOfsamplers")),null!==t.getUniformLocation(r,"TimeFor")&&(r.uniformTime=t.getUniformLocation(r,"TimeFor")),null!==t.getUniformLocation(r,"uSampler")&&(r.samplerUniform=t.getUniformLocation(r,"uSampler")),null!==t.getUniformLocation(r,"uSampler1")&&(r.samplerUniform1=t.getUniformLocation(r,"uSampler1")),null!==t.getUniformLocation(r,"uSampler2")&&(r.samplerUniform2=t.getUniformLocation(r,"uSampler2")),null!==t.getUniformLocation(r,"uSampler3")&&(r.samplerUniform3=t.getUniformLocation(r,"uSampler3")),null!==t.getUniformLocation(r,"uSampler4")&&(r.samplerUniform3=t.getUniformLocation(r,"uSampler4")),null!==t.getUniformLocation(r,"uSampler5")&&(r.samplerUniform3=t.getUniformLocation(r,"uSampler5")),null!==t.getUniformLocation(r,"uSampler6")&&(r.samplerUniform3=t.getUniformLocation(r,"uSampler6")),null!==t.getUniformLocation(r,"uSampler7")&&(r.samplerUniform3=t.getUniformLocation(r,"uSampler7")),null!==t.getUniformLocation(r,"uUseLighting")&&(r.useLightingUniform=t.getUniformLocation(r,"uUseLighting")),null!==t.getUniformLocation(r,"uAmbientColor")&&(r.ambientColorUniform=t.getUniformLocation(r,"uAmbientColor")),null!==t.getUniformLocation(r,"uLightingDirection")&&(r.lightingDirectionUniform=t.getUniformLocation(r,"uLightingDirection")),null!==t.getUniformLocation(r,"uDirectionalColor")&&(r.directionalColorUniform=t.getUniformLocation(r,"uDirectionalColor")),r.pMatrixUniform=t.getUniformLocation(r,"uPMatrix"),r.mvMatrixUniform=t.getUniformLocation(r,"uMVMatrix"),r.fragmentShader=o,r.vertexShader=e,r):0}},o.SET_STREAM=A,o.ACCESS_CAMERA=function(t){var e=this;e.video=document.getElementById(t),A(e.video);var r=document.getElementById("HOLDER_STREAMS");e.videoImage=document.createElement("canvas"),e.videoImage.id=t+"IMAGE_",e.videoImage.setAttribute("width","512px"),e.videoImage.setAttribute("height","512px"),r.appendChild(e.videoImage),e.videoImageContext=e.videoImage.getContext("2d"),e.videoImageContext.fillStyle="#0000FF",e.videoImageContext.fillRect(0,0,e.videoImage.width,e.videoImage.height),e.texture=a.default.tools.loadVideoTexture("glVideoTexture",e.videoImage),e.UPDATE=function(){e.video.readyState===e.video.HAVE_ENOUGH_DATA&&(e.videoImageContext.drawImage(e.video,0,0,e.videoImage.width,e.videoImage.height),e.videoImageContext.font="30px Georgia",e.videoImageContext.fillStyle="black",e.videoImageContext.fillText(" Visual-JS game engine -webGL 2 part",0,85),e.videoImageContext.fillText("Video texture example ",20,50))},a.default.updateBeforeDraw.push(e)},o.VIDEO_TEXTURE=function(t){var e=this,r=document.getElementById("HOLDER_STREAMS");e.video=document.getElementById("webcam_beta"),e.video.READY=function(t){e.videoImage=document.createElement("canvas"),e.videoImage.id="webcam_betaIMAGE_",e.videoImage.setAttribute("width","512px"),e.videoImage.setAttribute("height","512px"),r.appendChild(e.videoImage),e.videoImageContext=e.videoImage.getContext("2d"),e.videoImageContext.fillStyle="#00003F",e.videoImageContext.fillRect(0,0,e.videoImage.width,e.videoImage.height),e.texture=a.default.tools.loadVideoTexture("glVideoTexture",e.videoImage),a.default.updateBeforeDraw.push(e)},e.video.addEventListener("loadeddata",e.video.READY,!1),e.video.src="res/videos/"+t,e.UPDATE=function(){e.video.readyState===e.video.HAVE_ENOUGH_DATA&&(e.videoImageContext.drawImage(e.video,0,0,e.videoImage.width,e.videoImage.height),e.videoImageContext.font="30px Georgia",e.videoImageContext.fillStyle="black",e.videoImageContext.fillText(" Visual-JS game engine -webGL 2 part",0,85),e.videoImageContext.fillText("Video texture example ",20,50))}},o.CANVAS2d_SURFACE_TEXTURE=function(t,e){var r=this;r.iframe=document.createElement("iframe"),r.iframe.id="canvas2dTextureSurface",r.iframe.setAttribute("width","512"),r.iframe.setAttribute("height","512");var o=document.getElementById("HOLDER_STREAMS");r.iframe.src=t,o.appendChild(r.iframe),document.getElementById(r.iframe.id).onload=function(){r.videoImage=r.iframe.contentDocument.getElementById("HELLO_WORLD"),r.canvasTexture=r.videoImage.getContext("2d"),a.default.scene.outsideBox.streamTextures.iframe.contentWindow.SYS.SCRIPT.LOAD(e),(0,n.E)("HOLDER_STREAMS").style.display="none",r.texture=a.default.tools.loadVideoTexture("glVideoTexture",r.videoImage)},r.showTextureEditor=function(){var t=(0,n.E)("HOLDER_STREAMS").style;t.display="block",t.left="0"}},o.webcamError=o.RegenerateShader=o.looper=o.EVENTS_INSTANCE=o.updateFrames=o.updateTime=o.totalTime=o.lastTime=o.ht=o.wd=void 0;var r,i=t("./events"),a=(r=t("../program/manifest"))&&r.__esModule?r:{default:r},n=t("./utility"),s=t("./webgl-utils"),l=t("./matrix-render"),d=t("./matrix-world");var h=0,u=0,g=0,m=0,f=0,c=0;o.updateFrames=c,o.updateTime=f,o.totalTime=m,o.lastTime=g,o.ht=u,o.wd=h;let p=null;o.EVENTS_INSTANCE=p;let L=0;function x(){o.wd=h=document.body.clientWidth-4,document.body.clientHeight>document.documentElement.clientHeight?o.ht=u=document.body.clientHeight-10:o.ht=u=document.documentElement.clientHeight-4}function w(){var t=document.createElement("canvas");t.id="canvas","full-screen"==a.default.resize.canvas?(t.width=window.innerWidth,t.height=window.innerHeight,i.SYS.DEBUG.LOG("SYS: fullscreen diametric resize is active. ")):(t.width=window.innerHeight*a.default.resize.aspectRatio,t.height=window.innerHeight,i.SYS.DEBUG.LOG("SYS: aspect ration resize is active. ")),document.body.append(t)}function E(){for(o.looper=L=0;L<=d.objListToDispose.length-1;)d.objListToDispose[L].destroy(),o.looper=L+=1;d.objListToDispose.length=0}o.looper=L,window.onbeforeunload=E,window.cancelRequestAnimFrame=window.cancelAnimationFrame||window.webkitCancelRequestAnimationFrame||window.mozCancelRequestAnimationFrame||window.oCancelRequestAnimationFrame||window.msCancelRequestAnimationFrame||function(t){window.clearTimeout(t)},a.default.operation.destroyWorld=function(){for(cancelRequestAnimFrame(l.reDrawID),delete this.pMatrix,delete this.mvMatrixStack,o.looper=L=0;L<=this.contentList.length-1;){if(delete this.contentList[L].type,delete this.contentList[L].size,delete this.contentList[L].sides,this.contentList[L].shaderProgram.fragmentShader&&(this.GL.gl.deleteShader(this.contentList[L].shaderProgram.fragmentShader),delete this.contentList[L].shaderProgram.fragmentShader),this.contentList[L].shaderProgram.vertexShader&&(this.GL.gl.deleteShader(this.contentList[L].shaderProgram.vertexShader),delete this.contentList[L].shaderProgram.vertexShader),this.contentList[L].texture){try{this.GL.gl.deleteTexture(this.contentList[L].texture)}catch(t){i.SYS.DEBUG.WARNING("Problem in destroying function : This is e log : "+t)}delete this.contentList[L].texture}this.contentList[L].shaderProgram&&(this.GL.gl.deleteProgram(this.contentList[L].shaderProgram),delete this.contentList[L].shaderProgram),this.contentList[L].vertexPositionBuffer&&(this.GL.gl.deleteBuffer(this.contentList[L].vertexPositionBuffer),delete this.contentList[L].vertexPositionBuffer),this.contentList[L].vertexTexCoordBuffer&&(this.GL.gl.deleteBuffer(this.contentList[L].vertexTexCoordBuffer),delete this.contentList[L].vertexTexCoordBuffer),this.contentList[L].vertexColorBuffer&&(this.GL.gl.deleteBuffer(this.contentList[L].vertexColorBuffer),delete this.contentList[L].vertexColorBuffer),this.contentList[L].vertexIndexBuffer&&(this.GL.gl.deleteBuffer(this.contentList[L].vertexIndexBuffer),delete this.contentList[L].vertexIndexBuffer),delete this.contentList[L].rotation,delete this.contentList[L].color,delete this.contentList[L].mvMatrix,o.looper=L+=1}this.contentList.length=0,this.GL.destroy(),i.SYS.DEBUG.WARNING("exit")},a.default.operation.PUSH_MATRIX=function(t,e){var r=mat4.create();mat4.copy(t,r),e.push(r)},a.default.operation.POP_MATRIX=function(t,e){if(0==e.length)throw"Invalid popMatrix!";e.pop()},a.default.operation.SET_MATRIX_UNIFORMS=function(t,e){this.GL.gl.uniformMatrix4fv(t.shaderProgram.pMatrixUniform,!1,e),this.GL.gl.uniformMatrix4fv(t.shaderProgram.mvMatrixUniform,!1,t.mvMatrix)};o.RegenerateShader=function(t,e,r){t=document.getElementById(t);"multiply"==r?r=0:"divide"==r&&(r=1),t.innerHTML=`

    // shader for ${e} textures
    precision mediump float;
    precision highp float;


    varying vec2 vTextureCoord;
    varying vec3 vLightWeighting;

    uniform float textureSamplerAmount[${e}];
    int MixOperandString = ${r};

    uniform sampler2D uSampler;
    uniform sampler2D uSampler1;
    uniform sampler2D uSampler2;
    uniform sampler2D uSampler3;
    uniform sampler2D uSampler4;
    uniform sampler2D uSampler5;
    uniform sampler2D uSampler6;
    uniform sampler2D uSampler7;

    void main(void) {

        vec4 textureColor = texture2D(uSampler, vec2(vTextureCoord.s, vTextureCoord.t));
        vec4 textureColor1 = texture2D(uSampler1, vec2(vTextureCoord.s, vTextureCoord.t));
        vec4 textureColor2 = texture2D(uSampler2, vec2(vTextureCoord.s, vTextureCoord.t));
        vec4 textureColor3 = texture2D(uSampler3, vec2(vTextureCoord.s, vTextureCoord.t));
        vec4 textureColor4 = texture2D(uSampler4, vec2(vTextureCoord.s, vTextureCoord.t));
        vec4 textureColor5 = texture2D(uSampler5, vec2(vTextureCoord.s, vTextureCoord.t));
        vec4 textureColor6 = texture2D(uSampler6, vec2(vTextureCoord.s, vTextureCoord.t));
        vec4 textureColor7 = texture2D(uSampler7, vec2(vTextureCoord.s, vTextureCoord.t));

        //MixOperandString  make it with eval todo task

        if (  ${e} == 1)
            {

                  gl_FragColor      = vec4(textureColor.rgb * vLightWeighting, textureColor.a);

              //  gl_FragColor = vec4( smoothstep(textureColor.r, textureColor.b,textureColor.g ) , smoothstep(textureColor.r, textureColor.b,textureColor.g ) ,0 ,smoothstep(textureColor.r, textureColor.b,textureColor.g ) );

            }
        else if (${e} == 2)
            {
                if ( ${r} == 0){
                 // gl_FragColor = textureColor * textureColor1;

                  gl_FragColor      = vec4( (textureColor.rgb * textureColor1.rgb) * vLightWeighting, textureColor.a);
                }
                else if (${r} == 1){

                //gl_FragColor = textureColor / textureColor1;
                  gl_FragColor      = vec4( (textureColor.rgb / textureColor1.rgb) * vLightWeighting, textureColor.a);
                }

            }
        else if (${e} == 3)
            {
                if (MixOperandString == 0){
                    gl_FragColor =vec4( (textureColor.rgb * textureColor1.rgb * textureColor2.rgb ) * vLightWeighting, textureColor.a);
                }
                else if (MixOperandString == 1){
                    gl_FragColor = vec4( (textureColor.rgb * textureColor1.rgb / textureColor2.rgb ) * vLightWeighting, textureColor.a);
                }

            }
        else if (${e} == 4)
        {
            if (MixOperandString == 0){
                gl_FragColor = textureColor * textureColor1 * textureColor2 * textureColor3;
            }
            else if (MixOperandString == 1){
                gl_FragColor = textureColor / textureColor1 / textureColor2 /  textureColor3;
            }

        }

    }

   // uniform sampler2D uSampler[${e}];
   // uniform float uMixAmount[${e}];

    /*
    void main() {
        vec4 color = vec4(0);

        for (int i = 0; i < ${e}; ++i) {
            vec4 texColor = texture2D(uSampler[i], vTextureCoord);
            color = mix(color, texColor, uMixAmount[i]);
        }

        gl_FragColor = color;
    }
    */

    `};var b=function(t){alert("Webcam error!"+t)};function A(r){navigator.getUserMedia?navigator.getUserMedia({audio:!0,video:!0},function(e){try{r.srcObject=e}catch(t){r.src=window.URL.createObjectURL(e)}},b):navigator.webkitGetUserMedia?navigator.webkitGetUserMedia({audio:!0,video:!0},function(e){try{r.srcObject=e}catch(t){r.src=window.URL.createObjectURL(e)}},b):alert("webcam broken.")}o.webcamError=b},{"../program/manifest":16,"./events":5,"./matrix-render":10,"./matrix-world":12,"./utility":14,"./webgl-utils":15}],5:[function(t,e,r){"use strict";Object.defineProperty(r,"__esModule",{value:!0}),r.EVENTS=function(e){var r=this;0==NOMOBILE?(e.addEventListener("touchstart",function(t){t.preventDefault();t=t.changedTouches;s.MOUSE.PRESS=!0,s.MOUSE.x=t[0].pageX,s.MOUSE.y=t[0].pageY,r.CALCULATE_TOUCH_OR_CLICK()},{passive:!0}),e.addEventListener("touchend",function(t){t.preventDefault();t=t.changedTouches;s.MOUSE.PRESS=!1,s.MOUSE.x=t[0].pageX,s.MOUSE.y=t[0].pageY,r.CALCULATE_TOUCH_UP_OR_MOUSE_UP()},{passive:!0}),e.addEventListener("touchcancel",function(t){t.preventDefault();t=t.changedTouches;s.MOUSE.PRESS=!1,s.MOUSE.x=t[0].pageX,s.MOUSE.y=t[0].pageY,r.CALCULATE_TOUCH_UP_OR_MOUSE_UP()},{passive:!0}),e.addEventListener("touchmove",function(t){t.preventDefault();t=t.changedTouches;s.MOUSE.x=t[0].pageX,s.MOUSE.y=t[0].pageY,r.CALCULATE_TOUCH_MOVE_OR_MOUSE_MOVE()},{passive:!0})):(e.addEventListener("click",function(t){s.MOUSE.x=t.layerX,s.MOUSE.y=t.layerY,r.CALCULATE_TOUCH_OR_CLICK(),s.DEBUG.LOG("SYS : CLICK EVENT "+e)},{passive:!0}),e.addEventListener("mouseup",function(t){s.MOUSE.PRESS=!1,s.MOUSE.BUTTON_PRESSED=null,s.MOUSE.x=t.layerX,s.MOUSE.y=t.layerY,r.CALCULATE_TOUCH_UP_OR_MOUSE_UP()},{passive:!0}),e.onmousemove=function(t){s.MOUSE.MOUSE_MOVING=!0,s.MOUSE.x=t.layerX,s.MOUSE.y=t.layerY,r.CALCULATE_TOUCH_MOVE_OR_MOUSE_MOVE(t)},e.onmousedown=function(t){s.MOUSE.PRESS=!0,3==t.which?(s.MOUSE.BUTTON_PRESSED="RIGHT",s.MOUSE.ON_RIGHT_BTN_PRESSED(),s.DEBUG.LOG("Right button clicked")):2==t.which?(s.MOUSE.BUTTON_PRESSED="MID",s.MOUSE.ON_MID_BTN_PRESSED(),s.DEBUG.LOG("Mid button clicked")):1==t.which&&(s.MOUSE.BUTTON_PRESSED="LEFT",s.MOUSE.ON_LEFT_BTN_PRESSED(),s.DEBUG.LOG("Left button clicked")),s.MOUSE.x=t.layerX,s.MOUSE.y=t.layerY,r.CALCULATE_TOUCH_DOWN_OR_MOUSE_DOWN()});window.addEventListener("resize",function(t){"full-screen"==a.default.resize.canvas?(e.width=window.innerWidth,e.height=window.innerHeight,s.DEBUG.LOG("SYS: fullscreen diametric resize is active. "+i.world)):(e.width=window.innerHeight*a.default.resize.aspectRatio,e.height=window.innerHeight,s.DEBUG.LOG("SYS: aspect ration resize is active. "+i.world)),1==a.default.resize.reloadWorldOnResize&&"undefined"!==window.resizeGlPort&&window.resizeGlPort()},{passive:!0}),this.CALCULATE_TOUCH_OR_CLICK=function(){s.DEBUG.LOG(" EVENT : MOUSE/TOUCH CLICK ")},this.CALCULATE_TOUCH_MOVE_OR_MOUSE_MOVE=function(t){var e,r,o=window.innerWidth/2,i=window.innerHeight/2;s.MOUSE.x=t.layerX-o,s.MOUSE.y=t.layerY-i,void 0!==s.MOUSE.LAST_POSITION.x&&(e=s.MOUSE.LAST_POSITION.x-s.MOUSE.x,r=s.MOUSE.LAST_POSITION.y-s.MOUSE.y,Math.abs(e)>Math.abs(r)&&0<e||Math.abs(e)>Math.abs(r)&&e<0||Math.abs(r)>Math.abs(e)&&0<r||(Math.abs(r),Math.abs(e))),d.pitchRate+=10*r,d.yawRate+=+e,s.MOUSE.LAST_POSITION.x=s.MOUSE.x,s.MOUSE.LAST_POSITION.y=s.MOUSE.y,s.MOUSE.x<a.default.camera.edgeMarginValue-o?a.default.camera.leftEdge=!0:a.default.camera.leftEdge=!1,s.MOUSE.x>o-a.default.camera.edgeMarginValue?a.default.camera.rightEdge=!0:a.default.camera.rightEdge=!1},this.CALCULATE_TOUCH_UP_OR_MOUSE_UP=function(){s.DEBUG.LOG(" EVENT : MOUSE/TOUCH UP ")},this.CALCULATE_TOUCH_DOWN_OR_MOUSE_DOWN=function(){s.DEBUG.LOG(" EVENT : MOUSE/TOUCH DOWN ")}},r.defineKeyBoardObject=l,r.keyboardPress=r.camera=r.SYS=void 0;var o,a=(o=t("../program/manifest"))&&o.__esModule?o:{default:o},i=t("./matrix-world"),n=t("./utility");var s={};function l(){var e=new Object;return e.keyArr=new Array,document.onkeydown=function(t){e.handleKeyDown(t)},document.onkeyup=function(t){e.handleKeyUp(t)},e.getKeyStatus=function(t){return this.keyArr[t]},e.setKeyStatus=function(t,e){this.keyArr[t]=e},e.handleKeyDown=function(t){t=t||window.event||"",this.setKeyStatus(t.keyCode,!0)},e.handleKeyUp=function(t){t=t||window.event||"",this.setKeyStatus(t.keyCode,!1)},e.destroy=function(){printLog("    Destroy Key Press object"),document.onkeydown=null,document.onkeyup=null,delete this.keyArr},e}(r.SYS=s).MOUSE={x:0,y:0,LAST_POSITION:{x:0,y:0},PRESS:!1,BUTTON_PRESSED:"",ON_LEFT_BTN_PRESSED:function(){},ON_RIGHT_BTN_PRESSED:function(){},ON_MID_BTN_PRESSED:function(){},MOUSE_MOVING:!1},s.DEBUG=new n.LOG;var d=new Object;(r.camera=d).pitch=0,d.pitchRate=0,d.yaw=0,d.yawRate=0,d.xPos=0,d.yPos=0,d.zPos=0,d.speed=0,d.yawAmp=.05,d.pitchAmp=.007;var h=l();r.keyboardPress=h,d.setCamera=function(t){h.getKeyStatus(37)||h.getKeyStatus(65)||1==a.default.camera.leftEdge?(d.yawRate=20,1==a.default.camera.leftEdge&&(d.yawRate=10)):(h.getKeyStatus(39)||h.getKeyStatus(68)||1==a.default.camera.rightEdge)&&(d.yawRate=-20,1==a.default.camera.rightEdge&&(d.yawRate=-10)),h.getKeyStatus(38)||h.getKeyStatus(87)?d.speed=a.default.camera.speedAmp:h.getKeyStatus(40)||h.getKeyStatus(83)?d.speed=-a.default.camera.speedAmp:d.speed=0,0!=d.speed&&(d.xPos-=Math.sin(degToRad(d.yaw))*d.speed,d.yPos=0,d.zPos-=Math.cos(degToRad(d.yaw))*d.speed),d.yaw+=d.yawRate*d.yawAmp,d.pitch+=d.pitchRate*d.pitchAmp,mat4.rotate(t.mvMatrix,t.mvMatrix,degToRad(-d.pitch),[1,0,0]),mat4.rotate(t.mvMatrix,t.mvMatrix,degToRad(-d.yaw),[0,1,0]),mat4.translate(t.mvMatrix,t.mvMatrix,[-d.xPos,-d.yPos,-d.zPos]),d.yawRate=0,d.pitchRate=0};let u=document.querySelector(".button1"),g=document.querySelector(".button2");if(g.addEventListener("click",()=>{u.style.display="none",g.style.display="none"}),document.addEventListener("appinstalled",t=>{console.log("PWA app installed by user!!! Hurray")}),!0===a.default.pwa.addToHomePage){let e;window.addEventListener("beforeinstallprompt",t=>{t.preventDefault(),e=t,u.style.display="block",g.style.display="block",u.addEventListener("click",()=>{u.style.display="none",e.prompt(),e.userChoice.then(t=>{"accepted"===t.outcome?(console.log("User accepted the A2HS prompt"),u.style.display="none",g.style.display="none"):(console.log("User dismissed the A2HS prompt"),u.style.display="none"),e=null})})})}else try{u.style.display="none",g.style.display="none"}catch(t){}},{"../program/manifest":16,"./matrix-world":12,"./utility":14}],6:[function(t,e,r){"use strict";Object.defineProperty(r,"__esModule",{value:!0}),r.default=void 0;var s={};(window.OBJ=s).Mesh=function(t){for(var e=[],r=[],o=[],i={verts:[],norms:[],textures:[],hashindices:{},indices:[],index:0},a=t.split("\n"),n=/^v\s/,s=/^vn\s/,l=/^vt\s/,d=/^f\s/,h=/\s+/,u=0;u<a.length;u++){var g=a[u].trim(),m=g.split(h);if(m.shift(),n.test(g))e.push.apply(e,m);else if(s.test(g))r.push.apply(r,m);else if(l.test(g))o.push.apply(o,m);else if(d.test(g))for(var f,c=!1,p=0,L=m.length;p<L;p++)3!==p||c||(p=2,c=!0),m[p]in i.hashindices?i.indices.push(i.hashindices[m[p]]):(f=m[p].split("/"),i.verts.push(+e[3*(f[0]-1)+0]),i.verts.push(+e[3*(f[0]-1)+1]),i.verts.push(+e[3*(f[0]-1)+2]),o.length&&(i.textures.push(+o[2*(f[1]-1)+0]),i.textures.push(+o[2*(f[1]-1)+1])),i.norms.push(+r[3*(f[2]-1)+0]),i.norms.push(+r[3*(f[2]-1)+1]),i.norms.push(+r[3*(f[2]-1)+2]),i.hashindices[m[p]]=i.index,i.indices.push(i.index),i.index+=1),3===p&&c&&i.indices.push(i.hashindices[m[0]])}this.vertices=i.verts,this.vertexNormals=i.norms,this.textures=i.textures,this.indices=i.indices};function l(){var r=this;this.xmlhttp=new XMLHttpRequest,this.get=function(t,e){r.xmlhttp.onreadystatechange=function(){4===r.xmlhttp.readyState&&e(r.xmlhttp.responseText,r.xmlhttp.status)},r.xmlhttp.open("GET",t,!0),r.xmlhttp.send()}}s.downloadMeshes=function(t,o,i){var e,a=Object.keys(t).length,n=!1;for(e in void 0===i&&(i={}),t)t.hasOwnProperty(e)&&(new l).get(t[e],function(r){return function(t,e){if(200===e?i[r]=new s.Mesh(t):(n=!0,console.error('An error has occurred and the mesh "'+r+'" could not be downloaded.')),0===--a){if(n)throw console.error("An error has occurred and one or meshes has not been downloaded. The execution of the script has terminated."),"";o(i)}}}(e))};function o(t,e,r,o){var i=t.createBuffer(),a=e===t.ARRAY_BUFFER?Float32Array:Uint16Array;return t.bindBuffer(e,i),t.bufferData(e,new a(r),t.STATIC_DRAW),i.itemSize=o,i.numItems=r.length/o,i}s.initMeshBuffers=function(t,e){e.normalBuffer=o(t,t.ARRAY_BUFFER,e.vertexNormals,3),e.textureBuffer=o(t,t.ARRAY_BUFFER,e.textures,2),e.vertexBuffer=o(t,t.ARRAY_BUFFER,e.vertices,3),e.indexBuffer=o(t,t.ELEMENT_ARRAY_BUFFER,e.indices,1)},s.deleteMeshBuffers=function(t,e){t.deleteBuffer(e.normalBuffer),t.deleteBuffer(e.textureBuffer),t.deleteBuffer(e.vertexBuffer),t.deleteBuffer(e.indexBuffer)},r.default=s},{}],7:[function(t,e,r){"use strict";Object.defineProperty(r,"__esModule",{value:!0}),r.default=void 0;var o,i=(o=t("../program/manifest"))&&o.__esModule?o:{default:o},a=t("./matrix-world");i.default.operation.cube_buffer_procedure=function(t){t.vertexPositionBuffer=a.world.GL.gl.createBuffer(),a.world.GL.gl.bindBuffer(a.world.GL.gl.ARRAY_BUFFER,t.vertexPositionBuffer),a.world.GL.gl.bufferData(a.world.GL.gl.ARRAY_BUFFER,t.geometry.vertices,a.world.GL.gl.STATIC_DRAW),t.vertexPositionBuffer.itemSize=3,t.vertexPositionBuffer.numItems=24,t.color&&null!==t.shaderProgram.vertexColorAttribute&&(t.vertexColorBuffer=a.world.GL.gl.createBuffer(),a.world.GL.gl.bindBuffer(a.world.GL.gl.ARRAY_BUFFER,t.vertexColorBuffer),a.world.GL.gl.bufferData(a.world.GL.gl.ARRAY_BUFFER,t.geometry.color,a.world.GL.gl.STATIC_DRAW),t.vertexColorBuffer.itemSize=4,t.vertexColorBuffer.numItems=24),t.texture&&(t.vertexTexCoordBuffer=a.world.GL.gl.createBuffer(),a.world.GL.gl.bindBuffer(a.world.GL.gl.ARRAY_BUFFER,t.vertexTexCoordBuffer),a.world.GL.gl.bufferData(a.world.GL.gl.ARRAY_BUFFER,t.geometry.texCoords,a.world.GL.gl.STATIC_DRAW),t.vertexTexCoordBuffer.itemSize=2,t.vertexTexCoordBuffer.numItems=24),t.shaderProgram.useLightingUniform&&(t.vertexNormalBuffer=a.world.GL.gl.createBuffer(),a.world.GL.gl.bindBuffer(a.world.GL.gl.ARRAY_BUFFER,t.vertexNormalBuffer),a.world.GL.gl.bufferData(a.world.GL.gl.ARRAY_BUFFER,t.LightMap,a.world.GL.gl.STATIC_DRAW),t.vertexNormalBuffer.itemSize=3,t.vertexNormalBuffer.numItems=24),t.vertexIndexBuffer=a.world.GL.gl.createBuffer(),a.world.GL.gl.bindBuffer(a.world.GL.gl.ELEMENT_ARRAY_BUFFER,t.vertexIndexBuffer),a.world.GL.gl.bufferData(a.world.GL.gl.ELEMENT_ARRAY_BUFFER,new Uint16Array(t.geometry.indices),a.world.GL.gl.STATIC_DRAW),t.vertexIndexBuffer.itemSize=1,t.vertexIndexBuffer.numItems=36},i.default.operation.piramide_buffer_procedure=function(t){t.vertexPositionBuffer=a.world.GL.gl.createBuffer(),a.world.GL.gl.bindBuffer(a.world.GL.gl.ARRAY_BUFFER,t.vertexPositionBuffer),a.world.GL.gl.bufferData(a.world.GL.gl.ARRAY_BUFFER,t.geometry.vertices,a.world.GL.gl.STATIC_DRAW),t.vertexPositionBuffer.itemSize=3,t.vertexPositionBuffer.numItems=18,t.vertexColorBuffer=a.world.GL.gl.createBuffer(),a.world.GL.gl.bindBuffer(a.world.GL.gl.ARRAY_BUFFER,t.vertexColorBuffer),a.world.GL.gl.bufferData(a.world.GL.gl.ARRAY_BUFFER,t.geometry.color,a.world.GL.gl.STATIC_DRAW),t.vertexColorBuffer.itemSize=4,t.vertexColorBuffer.numItems=18},i.default.operation.square_buffer_procedure=function(t){t.vertexPositionBuffer=a.world.GL.gl.createBuffer(),a.world.GL.gl.bindBuffer(a.world.GL.gl.ARRAY_BUFFER,t.vertexPositionBuffer),a.world.GL.gl.bufferData(a.world.GL.gl.ARRAY_BUFFER,t.geometry.vertices,a.world.GL.gl.STATIC_DRAW),t.vertexPositionBuffer.itemSize=3,t.vertexPositionBuffer.numItems=4,t.vertexColorBuffer=a.world.GL.gl.createBuffer(),a.world.GL.gl.bindBuffer(a.world.GL.gl.ARRAY_BUFFER,t.vertexColorBuffer),a.world.GL.gl.bufferData(a.world.GL.gl.ARRAY_BUFFER,new Float32Array(t.geometry.color),a.world.GL.gl.STATIC_DRAW),t.vertexColorBuffer.itemSize=4,t.vertexColorBuffer.numItems=t.geometry.colorData.color.length},i.default.operation.triangle_buffer_procedure=function(t){t.vertexPositionBuffer=a.world.GL.gl.createBuffer(),a.world.GL.gl.bindBuffer(a.world.GL.gl.ARRAY_BUFFER,t.vertexPositionBuffer),a.world.GL.gl.bufferData(a.world.GL.gl.ARRAY_BUFFER,t.geometry.vertices,a.world.GL.gl.STATIC_DRAW),t.vertexPositionBuffer.itemSize=3,t.vertexPositionBuffer.numItems=3,t.vertexColorBuffer=a.world.GL.gl.createBuffer(),a.world.GL.gl.bindBuffer(a.world.GL.gl.ARRAY_BUFFER,t.vertexColorBuffer),a.world.GL.gl.bufferData(a.world.GL.gl.ARRAY_BUFFER,new Float32Array(t.color),a.world.GL.gl.STATIC_DRAW),t.vertexColorBuffer.itemSize=4,t.vertexColorBuffer.numItems=3},i.default.operation.obj_buffer_procedure=function(t){if(t.color&&null!==t.shaderProgram.vertexColorAttribute){t.vertexColorBuffer=a.world.GL.gl.createBuffer(),a.world.GL.gl.bindBuffer(a.world.GL.gl.ARRAY_BUFFER,t.vertexColorBuffer);var e,r=[];for(e in t.color)for(var o=t.color[e],i=0;i<4;)r=r.concat(o),i+=1;a.world.GL.gl.bufferData(a.world.GL.gl.ARRAY_BUFFER,new Float32Array(r),a.world.GL.gl.STATIC_DRAW),t.vertexColorBuffer.itemSize=4,t.vertexColorBuffer.numItems=4}t.shaderProgram.useLightingUniform&&a.world.GL.gl.bufferData(a.world.GL.gl.ARRAY_BUFFER,t.mesh.normalBuffer,a.world.GL.gl.STATIC_DRAW)},i.default.operation.squareTex_buffer_procedure=function(t){if(t.vertexPositionBuffer=a.world.GL.gl.createBuffer(),a.world.GL.gl.bindBuffer(a.world.GL.gl.ARRAY_BUFFER,t.vertexPositionBuffer),a.world.GL.gl.bufferData(a.world.GL.gl.ARRAY_BUFFER,t.geometry.vertices,a.world.GL.gl.STATIC_DRAW),t.vertexPositionBuffer.itemSize=3,t.vertexPositionBuffer.numItems=4,t.color&&null!==t.shaderProgram.vertexColorAttribute){t.vertexColorBuffer=a.world.GL.gl.createBuffer(),a.world.GL.gl.bindBuffer(a.world.GL.gl.ARRAY_BUFFER,t.vertexColorBuffer);var e,r=[];for(e in t.color)for(var o=t.color[e],i=0;i<4;)r=r.concat(o),i+=1;a.world.GL.gl.bufferData(a.world.GL.gl.ARRAY_BUFFER,new Float32Array(r),a.world.GL.gl.STATIC_DRAW),t.vertexColorBuffer.itemSize=3,t.vertexColorBuffer.numItems=4}t.texture&&(t.vertexTexCoordBuffer=a.world.GL.gl.createBuffer(),a.world.GL.gl.bindBuffer(a.world.GL.gl.ARRAY_BUFFER,t.vertexTexCoordBuffer),a.world.GL.gl.bufferData(a.world.GL.gl.ARRAY_BUFFER,t.geometry.texCoords,a.world.GL.gl.STATIC_DRAW),t.vertexTexCoordBuffer.itemSize=2,t.vertexTexCoordBuffer.numItems=4),t.shaderProgram.useLightingUniform&&(t.vertexNormalBuffer=a.world.GL.gl.createBuffer(),a.world.GL.gl.bindBuffer(a.world.GL.gl.ARRAY_BUFFER,t.vertexNormalBuffer),a.world.GL.gl.bufferData(a.world.GL.gl.ARRAY_BUFFER,t.LightMap,a.world.GL.gl.STATIC_DRAW),t.vertexNormalBuffer.itemSize=4,t.vertexNormalBuffer.numItems=4),t.vertexIndexBuffer=a.world.GL.gl.createBuffer(),a.world.GL.gl.bindBuffer(a.world.GL.gl.ELEMENT_ARRAY_BUFFER,t.vertexIndexBuffer),a.world.GL.gl.bufferData(a.world.GL.gl.ELEMENT_ARRAY_BUFFER,new Uint16Array(t.geometry.indices),a.world.GL.gl.STATIC_DRAW),t.vertexIndexBuffer.itemSize=1,t.vertexIndexBuffer.numItems=6},i.default.operation.sphere_buffer_procedure=function(t){if(t.vertexPositionBuffer=a.world.GL.gl.createBuffer(),a.world.GL.gl.bindBuffer(a.world.GL.gl.ARRAY_BUFFER,t.vertexPositionBuffer),a.world.GL.gl.bufferData(a.world.GL.gl.ARRAY_BUFFER,t.geometry.vertices,a.world.GL.gl.STATIC_DRAW),t.vertexPositionBuffer.itemSize=3,t.vertexPositionBuffer.numItems=t.geometry.vertexPositionData.length/3,t.color&&null!==t.shaderProgram.vertexColorAttribute){t.vertexColorBuffer=a.world.GL.gl.createBuffer(),a.world.GL.gl.bindBuffer(a.world.GL.gl.ARRAY_BUFFER,t.vertexColorBuffer);var e,r=[];for(e in t.color)for(var o=t.color[e],i=0;i<4;)r=r.concat(o),i+=1;a.world.GL.gl.bufferData(a.world.GL.gl.ARRAY_BUFFER,new Float32Array(r),a.world.GL.gl.STATIC_DRAW),t.vertexColorBuffer.itemSize=3,t.vertexColorBuffer.numItems=t.geometry.normalData.length/3}t.texture&&(t.vertexTexCoordBuffer=a.world.GL.gl.createBuffer(),a.world.GL.gl.bindBuffer(a.world.GL.gl.ARRAY_BUFFER,t.vertexTexCoordBuffer),a.world.GL.gl.bufferData(a.world.GL.gl.ARRAY_BUFFER,t.geometry.texCoords,a.world.GL.gl.STATIC_DRAW),t.vertexTexCoordBuffer.itemSize=2,t.vertexTexCoordBuffer.numItems=t.geometry.textureCoordData.length/2),t.shaderProgram.useLightingUniform&&(t.vertexNormalBuffer=a.world.GL.gl.createBuffer(),a.world.GL.gl.bindBuffer(a.world.GL.gl.ARRAY_BUFFER,t.vertexNormalBuffer),a.world.GL.gl.bufferData(a.world.GL.gl.ARRAY_BUFFER,t.geometry.normals,a.world.GL.gl.STATIC_DRAW),t.vertexNormalBuffer.itemSize=3,t.vertexNormalBuffer.numItems=t.geometry.normalData.length/3),t.vertexIndexBuffer=a.world.GL.gl.createBuffer(),a.world.GL.gl.bindBuffer(a.world.GL.gl.ELEMENT_ARRAY_BUFFER,t.vertexIndexBuffer),a.world.GL.gl.bufferData(a.world.GL.gl.ELEMENT_ARRAY_BUFFER,new Uint16Array(t.geometry.indices),a.world.GL.gl.STATIC_DRAW),t.vertexIndexBuffer.itemSize=1,t.vertexIndexBuffer.numItems=t.geometry.indexData.length};i=i.default.operation;r.default=i},{"../program/manifest":16,"./matrix-world":12}],8:[function(t,e,r){"use strict";Object.defineProperty(r,"__esModule",{value:!0}),r.default=void 0;var o,a=(o=t("../program/manifest"))&&o.__esModule?o:{default:o},n=t("./matrix-world"),s=t("./events"),l=function(t,e){if(!e&&t&&t.__esModule)return t;if(null===t||"object"!=typeof t&&"function"!=typeof t)return{default:t};e=d(e);if(e&&e.has(t))return e.get(t);var r,o={},i=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(r in t){var a;"default"!==r&&Object.prototype.hasOwnProperty.call(t,r)&&((a=i?Object.getOwnPropertyDescriptor(t,r):null)&&(a.get||a.set)?Object.defineProperty(o,r,a):o[r]=t[r])}o.default=t,e&&e.set(t,o);return o}(t("./raycast"));function d(t){if("function"!=typeof WeakMap)return null;var e=new WeakMap,r=new WeakMap;return(d=function(t){return t?r:e})(t)}a.default.operation.draws=new Object,a.default.operation.draws.cube=function(t){var e,r,o=0;if(mat4.identity(t.mvMatrix),this.mvPushMatrix(t.mvMatrix,this.mvMatrixStack),1==a.default.camera.FirstPersonController&&s.camera.setCamera(t),mat4.translate(t.mvMatrix,t.mvMatrix,t.position.worldLocation),mat4.rotate(t.mvMatrix,t.mvMatrix,degToRad(t.rotation.rx),t.rotation.getRotDirX()),mat4.rotate(t.mvMatrix,t.mvMatrix,degToRad(t.rotation.ry),t.rotation.getRotDirY()),mat4.rotate(t.mvMatrix,t.mvMatrix,degToRad(t.rotation.rz),t.rotation.getRotDirZ()),l.checkingProcedureCalc&&l.checkingProcedureCalc(t),t.vertexPositionBuffer&&(n.world.GL.gl.bindBuffer(n.world.GL.gl.ARRAY_BUFFER,t.vertexPositionBuffer),1==t.geometry.dynamicBuffer&&n.world.GL.gl.bufferData(n.world.GL.gl.ARRAY_BUFFER,t.geometry.vertices,n.world.GL.gl.STATIC_DRAW),n.world.GL.gl.vertexAttribPointer(t.shaderProgram.vertexPositionAttribute,t.vertexPositionBuffer.itemSize,n.world.GL.gl.FLOAT,!1,0,0),n.world.GL.gl.enableVertexAttribArray(t.shaderProgram.vertexPositionAttribute),o+=1),t.vertexColorBuffer&&(n.world.GL.gl.bindBuffer(n.world.GL.gl.ARRAY_BUFFER,t.vertexColorBuffer),n.world.GL.gl.vertexAttribPointer(t.shaderProgram.vertexColorAttribute,t.vertexColorBuffer.itemSize,n.world.GL.gl.FLOAT,!1,0,0),n.world.GL.gl.enableVertexAttribArray(t.shaderProgram.vertexColorAttribute),o+=1),t.shaderProgram.useLightingUniform?(n.world.GL.gl.uniform1i(t.shaderProgram.useLightingUniform,!0),t.vertexNormalBuffer&&(n.world.GL.gl.bindBuffer(n.world.GL.gl.ARRAY_BUFFER,t.vertexNormalBuffer),n.world.GL.gl.vertexAttribPointer(t.shaderProgram.vertexNormalAttribute,t.vertexNormalBuffer.itemSize,n.world.GL.gl.FLOAT,!1,0,0),n.world.GL.gl.enableVertexAttribArray(t.shaderProgram.vertexNormalAttribute),o+=1),t.shaderProgram.ambientColorUniform&&(document.getElementById("ambLight")&&document.getElementById("ambLight").color?n.world.GL.gl.uniform3f(t.shaderProgram.ambientColorUniform,parseFloat(document.getElementById("ambLight").color.rgb[0]),parseFloat(document.getElementById("ambLight").color.rgb[1]),parseFloat(document.getElementById("ambLight").color.rgb[2])):n.world.GL.gl.uniform3f(t.shaderProgram.ambientColorUniform,t.LightsData.ambientLight.r,t.LightsData.ambientLight.g,t.LightsData.ambientLight.b)),t.shaderProgram.directionalColorUniform&&(document.getElementById("dirLight")&&document.getElementById("dirLight").color?n.world.GL.gl.uniform3f(t.shaderProgram.directionalColorUniform,parseFloat(document.getElementById("dirLight").color.rgb[0]),parseFloat(document.getElementById("dirLight").color.rgb[1]),parseFloat(document.getElementById("dirLight").color.rgb[2])):n.world.GL.gl.uniform3f(t.shaderProgram.directionalColorUniform,t.LightsData.directionLight.R(),t.LightsData.directionLight.G(),t.LightsData.directionLight.B())),e=null,t.shaderProgram.lightingDirectionUniform&&(e=document.getElementById("dirX")&&document.getElementById("dirY")&&document.getElementById("dirZ")?[parseFloat(document.getElementById("dirX").value),parseFloat(document.getElementById("dirY").value),parseFloat(document.getElementById("dirZ").value)]:[t.LightsData.lightingDirection.r,t.LightsData.lightingDirection.g,t.LightsData.lightingDirection.b],r=vec3.create(),vec3.normalize(r,e),vec3.scale(r,r,-1),n.world.GL.gl.uniform3fv(t.shaderProgram.lightingDirectionUniform,r))):t.shaderProgram.useLightingUniform&&(t.shaderProgram.ambientColorUniform&&n.world.GL.gl.uniform3f(t.shaderProgram.ambientColorUniform,parseFloat(.2),parseFloat(.2),parseFloat(.2)),t.shaderProgram.directionalColorUniform&&n.world.GL.gl.uniform3f(t.shaderProgram.directionalColorUniform,parseFloat(1),parseFloat(0),parseFloat(0))),t.vertexTexCoordBuffer){if(n.world.GL.gl.bindBuffer(n.world.GL.gl.ARRAY_BUFFER,t.vertexTexCoordBuffer),1==t.geometry.dynamicBuffer&&n.world.GL.gl.bufferData(n.world.GL.gl.ARRAY_BUFFER,t.geometry.texCoords,n.world.GL.gl.STATIC_DRAW),n.world.GL.gl.vertexAttribPointer(t.shaderProgram.textureCoordAttribute,t.vertexTexCoordBuffer.itemSize,n.world.GL.gl.FLOAT,!1,0,0),n.world.GL.gl.enableVertexAttribArray(t.shaderProgram.textureCoordAttribute),null!=t.streamTextures)a.default.tools.loadVideoTexture("glVideoTexture",t.streamTextures.videoImage),n.world.GL.gl.uniform1i(t.shaderProgram.samplerUniform,0);else for(var i=0;i<t.textures.length;i++)null==t.custom.gl_texture?(n.world.GL.gl.activeTexture(n.world.GL.gl["TEXTURE"+i]),n.world.GL.gl.bindTexture(n.world.GL.gl.TEXTURE_2D,t.textures[i]),n.world.GL.gl.pixelStorei(n.world.GL.gl.UNPACK_FLIP_Y_WEBGL,!1),n.world.GL.gl.texParameteri(n.world.GL.gl.TEXTURE_2D,n.world.GL.gl.TEXTURE_MAG_FILTER,n.world.GL.gl.NEAREST),n.world.GL.gl.texParameteri(n.world.GL.gl.TEXTURE_2D,n.world.GL.gl.TEXTURE_MIN_FILTER,n.world.GL.gl.NEAREST),n.world.GL.gl.texParameteri(n.world.GL.gl.TEXTURE_2D,n.world.GL.gl.TEXTURE_WRAP_S,n.world.GL.gl.CLAMP_TO_EDGE),n.world.GL.gl.texParameteri(n.world.GL.gl.TEXTURE_2D,n.world.GL.gl.TEXTURE_WRAP_T,n.world.GL.gl.CLAMP_TO_EDGE),n.world.GL.gl.uniform1i(t.shaderProgram.samplerUniform,i)):t.custom.gl_texture(t,i);o+=1}n.world.GL.gl.bindBuffer(n.world.GL.gl.ELEMENT_ARRAY_BUFFER,t.vertexIndexBuffer),n.world.setMatrixUniforms(t,this.pMatrix,t.mvMatrix),t.vertexNormalBuffer&&t.shaderProgram.nMatrixUniform&&(r=mat3.create(),mat3.normalFromMat4(r,t.mvMatrix),mat3.transpose(r,r),n.world.GL.gl.uniformMatrix3fv(t.shaderProgram.nMatrixUniform,!1,r)),n.world.disableUnusedAttr(n.world.GL.gl,o),1==t.glBlend.blendEnabled?(n.world.GL.gl.isEnabled(n.world.GL.gl.BLEND)||n.world.GL.gl.enable(n.world.GL.gl.BLEND),n.world.GL.gl.blendFunc(n.world.GL.gl[t.glBlend.blendParamSrc],n.world.GL.gl[t.glBlend.blendParamDest])):(n.world.GL.gl.disable(n.world.GL.gl.BLEND),n.world.GL.gl.enable(n.world.GL.gl.DEPTH_TEST)),n.world.GL.gl.drawElements(n.world.GL.gl[t.glDrawElements.mode],t.glDrawElements.numberOfIndicesRender,n.world.GL.gl.UNSIGNED_SHORT,0),t.instancedDraws.overrideDrawArraysInstance(t),this.mvPopMatrix(t.mvMatrix,this.mvMatrixStack)},a.default.operation.draws.piramide=function(t){mat4.identity(t.mvMatrix),n.world.mvPushMatrix(t.mvMatrix,this.mvMatrixStack),1==a.default.camera.FirstPersonController&&s.camera.setCamera(t),mat4.translate(t.mvMatrix,t.mvMatrix,t.position.worldLocation),mat4.rotate(t.mvMatrix,t.mvMatrix,degToRad(t.rotation.rx),t.rotation.getRotDirX()),mat4.rotate(t.mvMatrix,t.mvMatrix,degToRad(t.rotation.ry),t.rotation.getRotDirY()),mat4.rotate(t.mvMatrix,t.mvMatrix,degToRad(t.rotation.rz),t.rotation.getRotDirZ()),l.checkingProcedureCalc&&l.checkingProcedureCalc(t),1==t.geometry.dynamicBuffer?(n.world.GL.gl.bindBuffer(n.world.GL.gl.ARRAY_BUFFER,t.vertexPositionBuffer),n.world.GL.gl.bufferData(n.world.GL.gl.ARRAY_BUFFER,t.geometry.vertices,n.world.GL.gl.STATIC_DRAW)):n.world.GL.gl.bindBuffer(n.world.GL.gl.ARRAY_BUFFER,t.vertexPositionBuffer),n.world.GL.gl.vertexAttribPointer(t.shaderProgram.vertexPositionAttribute,t.vertexPositionBuffer.itemSize,n.world.GL.gl.FLOAT,!1,0,0),t.vertexColorBuffer&&(n.world.GL.gl.bindBuffer(n.world.GL.gl.ARRAY_BUFFER,t.vertexColorBuffer),n.world.GL.gl.vertexAttribPointer(t.shaderProgram.vertexColorAttribute,t.vertexColorBuffer.itemSize,n.world.GL.gl.FLOAT,!1,0,0)),1==t.glBlend.blendEnabled?(n.world.GL.gl.isEnabled(n.world.GL.gl.BLEND)||n.world.GL.gl.enable(n.world.GL.gl.BLEND),n.world.GL.gl.blendFunc(n.world.GL.gl[t.glBlend.blendParamSrc],n.world.GL.gl[t.glBlend.blendParamDest])):(n.world.GL.gl.disable(n.world.GL.gl.BLEND),n.world.GL.gl.enable(n.world.GL.gl.DEPTH_TEST)),n.world.setMatrixUniforms(t,this.pMatrix,t.mvMatrix),n.world.GL.gl.drawArrays(n.world.GL.gl[t.glDrawElements.mode],0,t.vertexPositionBuffer.numItems),t.instancedDraws.overrideDrawArraysInstance(t),this.mvPopMatrix(t.mvMatrix,this.mvMatrixStack)},a.default.operation.draws.square=function(t){mat4.identity(t.mvMatrix),n.world.mvPushMatrix(t.mvMatrix,n.world.mvMatrixStack),1==a.default.camera.FirstPersonController&&s.camera.setCamera(t),mat4.translate(t.mvMatrix,t.mvMatrix,t.position.worldLocation),mat4.rotate(t.mvMatrix,t.mvMatrix,degToRad(t.rotation.rx),t.rotation.getRotDirX()),mat4.rotate(t.mvMatrix,t.mvMatrix,degToRad(t.rotation.ry),t.rotation.getRotDirY()),mat4.rotate(t.mvMatrix,t.mvMatrix,degToRad(t.rotation.rz),t.rotation.getRotDirZ()),l.checkingProcedureCalc&&l.checkingProcedureCalc(t),1==t.geometry.dynamicBuffer?(n.world.GL.gl.bindBuffer(n.world.GL.gl.ARRAY_BUFFER,t.vertexPositionBuffer),n.world.GL.gl.bufferData(n.world.GL.gl.ARRAY_BUFFER,t.geometry.vertices,n.world.GL.gl.STATIC_DRAW)):n.world.GL.gl.bindBuffer(n.world.GL.gl.ARRAY_BUFFER,t.vertexPositionBuffer),n.world.GL.gl.vertexAttribPointer(t.shaderProgram.vertexPositionAttribute,t.vertexPositionBuffer.itemSize,n.world.GL.gl.FLOAT,!1,0,0),t.vertexColorBuffer&&(n.world.GL.gl.bindBuffer(n.world.GL.gl.ARRAY_BUFFER,t.vertexColorBuffer),n.world.GL.gl.vertexAttribPointer(t.shaderProgram.vertexColorAttribute,t.vertexColorBuffer.itemSize,n.world.GL.gl.FLOAT,!1,0,0)),1==t.glBlend.blendEnabled?(n.world.GL.gl.isEnabled(n.world.GL.gl.BLEND)||n.world.GL.gl.enable(n.world.GL.gl.BLEND),n.world.GL.gl.blendFunc(n.world.GL.gl[t.glBlend.blendParamSrc],n.world.GL.gl[t.glBlend.blendParamDest])):(n.world.GL.gl.disable(n.world.GL.gl.BLEND),n.world.GL.gl.enable(n.world.GL.gl.DEPTH_TEST)),n.world.setMatrixUniforms(t,this.pMatrix,t.mvMatrix),n.world.GL.gl.drawArrays(n.world.GL.gl[t.glDrawElements.mode],0,t.vertexPositionBuffer.numItems),t.instancedDraws.overrideDrawArraysInstance(t),this.mvPopMatrix(t.mvMatrix,this.mvMatrixStack)},a.default.operation.draws.triangle=function(t){mat4.identity(t.mvMatrix),n.world.mvPushMatrix(t.mvMatrix,this.mvMatrixStack),1==a.default.camera.FirstPersonController&&s.camera.setCamera(t),mat4.translate(t.mvMatrix,t.mvMatrix,t.position.worldLocation),mat4.rotate(t.mvMatrix,t.mvMatrix,degToRad(t.rotation.rx),t.rotation.getRotDirX()),mat4.rotate(t.mvMatrix,t.mvMatrix,degToRad(t.rotation.ry),t.rotation.getRotDirY()),mat4.rotate(t.mvMatrix,t.mvMatrix,degToRad(t.rotation.rz),t.rotation.getRotDirZ()),l.checkingProcedureCalc&&l.checkingProcedureCalc(t),n.world.GL.gl.bindBuffer(n.world.GL.gl.ARRAY_BUFFER,t.vertexPositionBuffer),n.world.GL.gl.vertexAttribPointer(t.shaderProgram.vertexPositionAttribute,t.vertexPositionBuffer.itemSize,n.world.GL.gl.FLOAT,!1,0,0),1==t.geometry.dynamicBuffer&&n.world.GL.gl.bufferData(n.world.GL.gl.ARRAY_BUFFER,t.geometry.vertices,n.world.GL.gl.STATIC_DRAW),n.world.GL.gl.bindBuffer(n.world.GL.gl.ARRAY_BUFFER,t.vertexColorBuffer),n.world.GL.gl.vertexAttribPointer(t.shaderProgram.vertexColorAttribute,t.vertexColorBuffer.itemSize,n.world.GL.gl.FLOAT,!1,0,0),1==t.glBlend.blendEnabled?(n.world.GL.gl.isEnabled(n.world.GL.gl.BLEND)||n.world.GL.gl.enable(n.world.GL.gl.BLEND),n.world.GL.gl.blendFunc(n.world.GL.gl[t.glBlend.blendParamSrc],n.world.GL.gl[t.glBlend.blendParamDest])):(n.world.GL.gl.disable(n.world.GL.gl.BLEND),n.world.GL.gl.enable(n.world.GL.gl.DEPTH_TEST)),this.setMatrixUniforms(t,this.pMatrix,t.mvMatrix),n.world.GL.gl.drawArrays(n.world.GL.gl[t.glDrawElements.mode],0,t.vertexPositionBuffer.numItems),t.instancedDraws.overrideDrawArraysInstance(t),this.mvPopMatrix(t.mvMatrix,this.mvMatrixStack)},a.default.operation.draws.drawObj=function(t){var e,r;if(mat4.identity(t.mvMatrix),n.world.mvPushMatrix(t.mvMatrix,this.mvMatrixStack),1==a.default.camera.FirstPersonController&&s.camera.setCamera(t),mat4.translate(t.mvMatrix,t.mvMatrix,t.position.worldLocation),mat4.rotate(t.mvMatrix,t.mvMatrix,degToRad(t.rotation.rx),t.rotation.getRotDirX()),mat4.rotate(t.mvMatrix,t.mvMatrix,degToRad(t.rotation.ry),t.rotation.getRotDirY()),mat4.rotate(t.mvMatrix,t.mvMatrix,degToRad(t.rotation.rz),t.rotation.getRotDirZ()),void 0!==t.mesh.vertexBuffer&&(null!=t.animation?(t.animation.currentDraws++,t.animation.currentDraws>t.animation.speed&&(t.animation.currentAni++,t.animation.currentDraws=0,t.animation.currentAni>t.animation.sumOfAniFrames&&(t.animation.currentAni=0)),0==t.animation.currentAni?n.world.GL.gl.bindBuffer(n.world.GL.gl.ARRAY_BUFFER,t.mesh.vertexBuffer):n.world.GL.gl.bindBuffer(n.world.GL.gl.ARRAY_BUFFER,a.default.meshes[t.animation.id+t.animation.currentAni].vertexBuffer)):(n.world.GL.gl.bindBuffer(n.world.GL.gl.ARRAY_BUFFER,t.mesh.vertexBuffer),n.world.GL.gl.bufferData(n.world.GL.gl.ARRAY_BUFFER,t.mesh.vertices,n.world.GL.gl.STATIC_DRAW)),n.world.GL.gl.vertexAttribPointer(t.shaderProgram.vertexPositionAttribute,t.mesh.vertexBuffer.itemSize,n.world.GL.gl.FLOAT,!1,0,0)),t.shaderProgram.useLightingUniform?(n.world.GL.gl.uniform1i(t.shaderProgram.useLightingUniform,!0),t.mesh.normalBuffer&&(n.world.GL.gl.bindBuffer(n.world.GL.gl.ARRAY_BUFFER,t.mesh.normalBuffer),n.world.GL.gl.vertexAttribPointer(t.shaderProgram.vertexNormalAttribute,t.mesh.normalBuffer.itemSize,n.world.GL.gl.FLOAT,!1,0,0),n.world.GL.gl.enableVertexAttribArray(t.shaderProgram.vertexNormalAttribute),0),t.shaderProgram.ambientColorUniform&&(document.getElementById("ambLight")&&document.getElementById("ambLight").color?n.world.GL.gl.uniform3f(t.shaderProgram.ambientColorUniform,parseFloat(document.getElementById("ambLight").color.rgb[0]),parseFloat(document.getElementById("ambLight").color.rgb[1]),parseFloat(document.getElementById("ambLight").color.rgb[2])):n.world.GL.gl.uniform3f(t.shaderProgram.ambientColorUniform,t.LightsData.ambientLight.R(),t.LightsData.ambientLight.G(),t.LightsData.ambientLight.B())),t.shaderProgram.directionalColorUniform&&(document.getElementById("dirLight")&&document.getElementById("dirLight").color?n.world.GL.gl.uniform3f(t.shaderProgram.directionalColorUniform,parseFloat(document.getElementById("dirLight").color.rgb[0]),parseFloat(document.getElementById("dirLight").color.rgb[1]),parseFloat(document.getElementById("dirLight").color.rgb[2])):n.world.GL.gl.uniform3f(t.shaderProgram.directionalColorUniform,t.LightsData.directionLight.R(),t.LightsData.directionLight.G(),t.LightsData.directionLight.B())),e=null,t.shaderProgram.lightingDirectionUniform&&(e=document.getElementById("dirX")&&document.getElementById("dirY")&&document.getElementById("dirZ")?[parseFloat(document.getElementById("dirX").value),parseFloat(document.getElementById("dirY").value),parseFloat(document.getElementById("dirZ").value)]:[t.LightsData.lightingDirection.r,t.LightsData.lightingDirection.g,t.LightsData.lightingDirection.b],r=vec3.create(),vec3.normalize(r,e),vec3.scale(r,r,-1),n.world.GL.gl.uniform3fv(t.shaderProgram.lightingDirectionUniform,r))):t.shaderProgram.useLightingUniform&&(t.shaderProgram.ambientColorUniform&&n.world.GL.gl.uniform3f(t.shaderProgram.ambientColorUniform,parseFloat(1),parseFloat(2),parseFloat(0)),t.shaderProgram.directionalColorUniform&&n.world.GL.gl.uniform3f(t.shaderProgram.directionalColorUniform,parseFloat(1),parseFloat(1),parseFloat(0))),t.mesh.textures.length||t.texture){if(t.texture){if(n.world.GL.gl.bindBuffer(n.world.GL.gl.ARRAY_BUFFER,t.mesh.textureBuffer),n.world.GL.gl.enableVertexAttribArray(t.shaderProgram.textureCoordAttribute),n.world.GL.gl.vertexAttribPointer(t.shaderProgram.textureCoordAttribute,t.mesh.textureBuffer.itemSize,n.world.GL.gl.FLOAT,!1,0,0),null!=t.streamTextures)a.default.tools.loadVideoTexture("glVideoTexture",t.streamTextures.videoImage),n.world.GL.gl.uniform1i(t.shaderProgram.samplerUniform,0);else for(var o=0;o<t.textures.length;o++)n.world.GL.gl.activeTexture(n.world.GL.gl["TEXTURE"+o]),n.world.GL.gl.bindTexture(n.world.GL.gl.TEXTURE_2D,t.textures[o]),n.world.GL.gl.pixelStorei(n.world.GL.gl.UNPACK_FLIP_Y_WEBGL,!1),n.world.GL.gl.texParameteri(n.world.GL.gl.TEXTURE_2D,n.world.GL.gl.TEXTURE_MAG_FILTER,n.world.GL.gl.NEAREST),n.world.GL.gl.texParameteri(n.world.GL.gl.TEXTURE_2D,n.world.GL.gl.TEXTURE_MIN_FILTER,n.world.GL.gl.NEAREST),n.world.GL.gl.texParameteri(n.world.GL.gl.TEXTURE_2D,n.world.GL.gl.TEXTURE_WRAP_S,n.world.GL.gl.CLAMP_TO_EDGE),n.world.GL.gl.texParameteri(n.world.GL.gl.TEXTURE_2D,n.world.GL.gl.TEXTURE_WRAP_T,n.world.GL.gl.CLAMP_TO_EDGE),n.world.GL.gl.uniform1i(t.shaderProgram.samplerUniform,o);0}}else;n.world.GL.gl.bindBuffer(n.world.GL.gl.ELEMENT_ARRAY_BUFFER,t.mesh.indexBuffer),1==t.glBlend.blendEnabled?(n.world.GL.gl.isEnabled(n.world.GL.gl.BLEND)||n.world.GL.gl.enable(n.world.GL.gl.BLEND),n.world.GL.gl.blendFunc(n.world.GL.gl[t.glBlend.blendParamSrc],n.world.GL.gl[t.glBlend.blendParamDest])):(n.world.GL.gl.disable(n.world.GL.gl.BLEND),n.world.GL.gl.enable(n.world.GL.gl.DEPTH_TEST)),this.setMatrixUniforms(t,this.pMatrix,t.mvMatrix),n.world.disableUnusedAttr(n.world.GL.gl,3),n.world.GL.gl.drawElements(n.world.GL.gl[t.glDrawElements.mode],t.glDrawElements.numberOfIndicesRender,n.world.GL.gl.UNSIGNED_SHORT,0),this.mvPopMatrix(t.mvMatrix,this.mvMatrixStack)},a.default.operation.draws.drawSquareTex=function(t){var e,r,o=0;if(mat4.identity(t.mvMatrix),this.mvPushMatrix(t.mvMatrix,this.mvMatrixStack),1==a.default.camera.FirstPersonController&&s.camera.setCamera(t),mat4.translate(t.mvMatrix,t.mvMatrix,t.position.worldLocation),mat4.rotate(t.mvMatrix,t.mvMatrix,degToRad(t.rotation.rx),t.rotation.getRotDirX()),mat4.rotate(t.mvMatrix,t.mvMatrix,degToRad(t.rotation.ry),t.rotation.getRotDirY()),mat4.rotate(t.mvMatrix,t.mvMatrix,degToRad(t.rotation.rz),t.rotation.getRotDirZ()),t.vertexPositionBuffer&&(n.world.GL.gl.bindBuffer(n.world.GL.gl.ARRAY_BUFFER,t.vertexPositionBuffer),1==t.geometry.dynamicBuffer&&n.world.GL.gl.bufferData(n.world.GL.gl.ARRAY_BUFFER,t.geometry.vertices,n.world.GL.gl.STATIC_DRAW),n.world.GL.gl.vertexAttribPointer(t.shaderProgram.vertexPositionAttribute,t.vertexPositionBuffer.itemSize,n.world.GL.gl.FLOAT,!1,0,0),n.world.GL.gl.enableVertexAttribArray(t.shaderProgram.vertexPositionAttribute),o+=1),t.vertexColorBuffer&&(n.world.GL.gl.bindBuffer(n.world.GL.gl.ARRAY_BUFFER,t.vertexColorBuffer),n.world.GL.gl.vertexAttribPointer(t.shaderProgram.vertexColorAttribute,t.vertexColorBuffer.itemSize,n.world.GL.gl.FLOAT,!1,0,0),n.world.GL.gl.enableVertexAttribArray(t.shaderProgram.vertexColorAttribute),o+=1),t.shaderProgram.useLightingUniform?(n.world.GL.gl.uniform1i(t.shaderProgram.useLightingUniform,!0),t.vertexNormalBuffer&&(n.world.GL.gl.bindBuffer(n.world.GL.gl.ARRAY_BUFFER,t.vertexNormalBuffer),n.world.GL.gl.vertexAttribPointer(t.shaderProgram.vertexNormalAttribute,t.vertexNormalBuffer.itemSize,n.world.GL.gl.FLOAT,!1,0,0),n.world.GL.gl.enableVertexAttribArray(t.shaderProgram.vertexNormalAttribute),o+=1),t.shaderProgram.ambientColorUniform&&(document.getElementById("ambLight")&&document.getElementById("ambLight").color?n.world.GL.gl.uniform3f(t.shaderProgram.ambientColorUniform,parseFloat(document.getElementById("ambLight").color.rgb[0]),parseFloat(document.getElementById("ambLight").color.rgb[1]),parseFloat(document.getElementById("ambLight").color.rgb[2])):n.world.GL.gl.uniform3f(t.shaderProgram.ambientColorUniform,t.LightsData.ambientLight.r,t.LightsData.ambientLight.g,t.LightsData.ambientLight.b)),t.shaderProgram.directionalColorUniform&&(document.getElementById("dirLight")&&document.getElementById("dirLight").color?n.world.GL.gl.uniform3f(t.shaderProgram.directionalColorUniform,parseFloat(document.getElementById("dirLight").color.rgb[0]),parseFloat(document.getElementById("dirLight").color.rgb[1]),parseFloat(document.getElementById("dirLight").color.rgb[2])):n.world.GL.gl.uniform3f(t.shaderProgram.directionalColorUniform,t.LightsData.directionLight.R(),t.LightsData.directionLight.G(),t.LightsData.directionLight.B())),e=null,t.shaderProgram.lightingDirectionUniform&&(e=document.getElementById("dirX")&&document.getElementById("dirY")&&document.getElementById("dirZ")?[parseFloat(document.getElementById("dirX").value),parseFloat(document.getElementById("dirY").value),parseFloat(document.getElementById("dirZ").value)]:[t.LightsData.lightingDirection.r,t.LightsData.lightingDirection.g,t.LightsData.lightingDirection.b],r=vec3.create(),vec3.normalize(r,e),vec3.scale(r,r,-1),n.world.GL.gl.uniform3fv(t.shaderProgram.lightingDirectionUniform,r))):t.shaderProgram.useLightingUniform&&(t.shaderProgram.ambientColorUniform&&n.world.GL.gl.uniform3f(t.shaderProgram.ambientColorUniform,parseFloat(1),parseFloat(2),parseFloat(0)),t.shaderProgram.directionalColorUniform&&n.world.GL.gl.uniform3f(t.shaderProgram.directionalColorUniform,parseFloat(1),parseFloat(0),parseFloat(0))),t.vertexTexCoordBuffer){if(n.world.GL.gl.bindBuffer(n.world.GL.gl.ARRAY_BUFFER,t.vertexTexCoordBuffer),1==t.geometry.dynamicBuffer&&n.world.GL.gl.bufferData(n.world.GL.gl.ARRAY_BUFFER,t.geometry.texCoords,n.world.GL.gl.STATIC_DRAW),n.world.GL.gl.vertexAttribPointer(t.shaderProgram.textureCoordAttribute,t.vertexTexCoordBuffer.itemSize,n.world.GL.gl.FLOAT,!1,0,0),n.world.GL.gl.enableVertexAttribArray(t.shaderProgram.textureCoordAttribute),null!=t.streamTextures)a.default.tools.loadVideoTexture("glVideoTexture",t.streamTextures.videoImage),n.world.GL.gl.uniform1i(t.shaderProgram.samplerUniform,0);else for(var i=0;i<t.textures.length;i++)null==t.custom.gl_texture?(n.world.GL.gl.activeTexture(n.world.GL.gl["TEXTURE"+i]),n.world.GL.gl.bindTexture(n.world.GL.gl.TEXTURE_2D,t.textures[i]),n.world.GL.gl.pixelStorei(n.world.GL.gl.UNPACK_FLIP_Y_WEBGL,!1),n.world.GL.gl.texParameteri(n.world.GL.gl.TEXTURE_2D,n.world.GL.gl.TEXTURE_MAG_FILTER,n.world.GL.gl.NEAREST),n.world.GL.gl.texParameteri(n.world.GL.gl.TEXTURE_2D,n.world.GL.gl.TEXTURE_MIN_FILTER,n.world.GL.gl.NEAREST),n.world.GL.gl.texParameteri(n.world.GL.gl.TEXTURE_2D,n.world.GL.gl.TEXTURE_WRAP_S,n.world.GL.gl.CLAMP_TO_EDGE),n.world.GL.gl.texParameteri(n.world.GL.gl.TEXTURE_2D,n.world.GL.gl.TEXTURE_WRAP_T,n.world.GL.gl.CLAMP_TO_EDGE),n.world.GL.gl.uniform1i(t.shaderProgram["samplerUniform"+i],i)):t.custom.gl_texture(t,i);o+=1}if(n.world.GL.gl.bindBuffer(n.world.GL.gl.ELEMENT_ARRAY_BUFFER,t.vertexIndexBuffer),n.world.setMatrixUniforms(t,this.pMatrix,t.mvMatrix),t.vertexNormalBuffer&&t.shaderProgram.nMatrixUniform&&(o=mat3.create(),mat3.normalFromMat4(o,t.mvMatrix),mat3.transpose(o,o),n.world.GL.gl.uniformMatrix3fv(t.shaderProgram.nMatrixUniform,!1,o)),n.world.disableUnusedAttr(n.world.GL.gl,4),1==t.glBlend.blendEnabled){n.world.GL.gl.isEnabled(n.world.GL.gl.BLEND)||n.world.GL.gl.enable(n.world.GL.gl.BLEND);try{n.world.GL.gl.blendFunc(n.world.GL.gl[t.glBlend.blendParamSrc],n.world.GL.gl[t.glBlend.blendParamDest])}catch(t){console.log(t)}}else n.world.GL.gl.disable(n.world.GL.gl.BLEND),n.world.GL.gl.enable(n.world.GL.gl.DEPTH_TEST);n.world.GL.gl.drawElements(n.world.GL.gl[t.glDrawElements.mode],t.glDrawElements.numberOfIndicesRender,n.world.GL.gl.UNSIGNED_SHORT,0),t.instancedDraws.overrideDrawArraysInstance(t),this.mvPopMatrix(t.mvMatrix,this.mvMatrixStack)},a.default.operation.draws.sphere=function(t){var e,r,o=0;if(mat4.identity(t.mvMatrix),this.mvPushMatrix(t.mvMatrix,this.mvMatrixStack),1==a.default.camera.FirstPersonController&&s.camera.setCamera(t),mat4.translate(t.mvMatrix,t.mvMatrix,t.position.worldLocation),mat4.rotate(t.mvMatrix,t.mvMatrix,degToRad(t.rotation.rx),t.rotation.getRotDirX()),mat4.rotate(t.mvMatrix,t.mvMatrix,degToRad(t.rotation.ry),t.rotation.getRotDirY()),mat4.rotate(t.mvMatrix,t.mvMatrix,degToRad(t.rotation.rz),t.rotation.getRotDirZ()),t.vertexPositionBuffer&&(n.world.GL.gl.bindBuffer(n.world.GL.gl.ARRAY_BUFFER,t.vertexPositionBuffer),1==t.geometry.dynamicBuffer&&n.world.GL.gl.bufferData(n.world.GL.gl.ARRAY_BUFFER,t.geometry.vertices,n.world.GL.gl.STATIC_DRAW),n.world.GL.gl.vertexAttribPointer(t.shaderProgram.vertexPositionAttribute,t.vertexPositionBuffer.itemSize,n.world.GL.gl.FLOAT,!1,0,0),n.world.GL.gl.enableVertexAttribArray(t.shaderProgram.vertexPositionAttribute),o+=1),t.vertexColorBuffer&&(n.world.GL.gl.bindBuffer(n.world.GL.gl.ARRAY_BUFFER,t.vertexColorBuffer),n.world.GL.gl.vertexAttribPointer(t.shaderProgram.vertexColorAttribute,t.vertexColorBuffer.itemSize,n.world.GL.gl.FLOAT,!1,0,0),n.world.GL.gl.enableVertexAttribArray(t.shaderProgram.vertexColorAttribute),o+=1),t.shaderProgram.useLightingUniform?(n.world.GL.gl.uniform1i(t.shaderProgram.useLightingUniform,!0),t.vertexNormalBuffer&&(n.world.GL.gl.bindBuffer(n.world.GL.gl.ARRAY_BUFFER,t.vertexNormalBuffer),n.world.GL.gl.vertexAttribPointer(t.shaderProgram.vertexNormalAttribute,t.vertexNormalBuffer.itemSize,n.world.GL.gl.FLOAT,!1,0,0),n.world.GL.gl.enableVertexAttribArray(t.shaderProgram.vertexNormalAttribute),o+=1),t.shaderProgram.ambientColorUniform&&(document.getElementById("ambLight")&&document.getElementById("ambLight").color?n.world.GL.gl.uniform3f(t.shaderProgram.ambientColorUniform,parseFloat(document.getElementById("ambLight").color.rgb[0]),parseFloat(document.getElementById("ambLight").color.rgb[1]),parseFloat(document.getElementById("ambLight").color.rgb[2])):n.world.GL.gl.uniform3f(t.shaderProgram.ambientColorUniform,t.LightsData.ambientLight.r,t.LightsData.ambientLight.g,t.LightsData.ambientLight.b)),t.shaderProgram.directionalColorUniform&&(document.getElementById("dirLight")&&document.getElementById("dirLight").color?n.world.GL.gl.uniform3f(t.shaderProgram.directionalColorUniform,parseFloat(document.getElementById("dirLight").color.rgb[0]),parseFloat(document.getElementById("dirLight").color.rgb[1]),parseFloat(document.getElementById("dirLight").color.rgb[2])):n.world.GL.gl.uniform3f(t.shaderProgram.directionalColorUniform,t.LightsData.directionLight.R(),t.LightsData.directionLight.G(),t.LightsData.directionLight.B())),e=null,t.shaderProgram.lightingDirectionUniform&&(e=document.getElementById("dirX")&&document.getElementById("dirY")&&document.getElementById("dirZ")?[parseFloat(document.getElementById("dirX").value),parseFloat(document.getElementById("dirY").value),parseFloat(document.getElementById("dirZ").value)]:[t.LightsData.lightingDirection.r,t.LightsData.lightingDirection.g,t.LightsData.lightingDirection.b],r=vec3.create(),vec3.normalize(r,e),vec3.scale(r,r,-1),n.world.GL.gl.uniform3fv(t.shaderProgram.lightingDirectionUniform,r))):t.shaderProgram.useLightingUniform&&(t.shaderProgram.ambientColorUniform&&n.world.GL.gl.uniform3f(t.shaderProgram.ambientColorUniform,parseFloat(.2),parseFloat(.2),parseFloat(.2)),t.shaderProgram.directionalColorUniform&&n.world.GL.gl.uniform3f(t.shaderProgram.directionalColorUniform,parseFloat(1),parseFloat(0),parseFloat(0))),t.vertexTexCoordBuffer){if(n.world.GL.gl.bindBuffer(n.world.GL.gl.ARRAY_BUFFER,t.vertexTexCoordBuffer),1==t.geometry.dynamicBuffer&&n.world.GL.gl.bufferData(n.world.GL.gl.ARRAY_BUFFER,t.geometry.texCoords,n.world.GL.gl.STATIC_DRAW),n.world.GL.gl.vertexAttribPointer(t.shaderProgram.textureCoordAttribute,t.vertexTexCoordBuffer.itemSize,n.world.GL.gl.FLOAT,!1,0,0),n.world.GL.gl.enableVertexAttribArray(t.shaderProgram.textureCoordAttribute),null!=t.streamTextures)a.default.tools.loadVideoTexture("glVideoTexture",t.streamTextures.videoImage),n.world.GL.gl.uniform1i(t.shaderProgram.samplerUniform,0);else for(var i=0;i<t.textures.length;i++)n.world.GL.gl.activeTexture(n.world.GL.gl["TEXTURE"+i]),n.world.GL.gl.bindTexture(n.world.GL.gl.TEXTURE_2D,t.textures[i]),n.world.GL.gl.pixelStorei(n.world.GL.gl.UNPACK_FLIP_Y_WEBGL,!1),n.world.GL.gl.texParameteri(n.world.GL.gl.TEXTURE_2D,n.world.GL.gl.TEXTURE_MAG_FILTER,n.world.GL.gl.LINEAR),n.world.GL.gl.texParameteri(n.world.GL.gl.TEXTURE_2D,n.world.GL.gl.TEXTURE_MIN_FILTER,n.world.GL.gl.LINEAR),n.world.GL.gl.texParameteri(n.world.GL.gl.TEXTURE_2D,n.world.GL.gl.TEXTURE_WRAP_S,n.world.GL.gl.CLAMP_TO_EDGE),n.world.GL.gl.texParameteri(n.world.GL.gl.TEXTURE_2D,n.world.GL.gl.TEXTURE_WRAP_T,n.world.GL.gl.CLAMP_TO_EDGE),n.world.GL.gl.uniform1i(t.shaderProgram.samplerUniform,i);o+=1}n.world.GL.gl.bindBuffer(n.world.GL.gl.ELEMENT_ARRAY_BUFFER,t.vertexIndexBuffer),t.vertexNormalBuffer&&t.shaderProgram.nMatrixUniform&&(r=mat3.create(),mat3.normalFromMat4(r,t.mvMatrix),mat3.transpose(r,r),n.world.GL.gl.uniformMatrix3fv(t.shaderProgram.nMatrixUniform,!1,r));try{n.world.GL.gl.useProgram(t.shaderProgram),n.world.GL.gl.uniform1i(t.shaderProgram.uniformTime,.1)}catch(t){console.warn("WTF - ERROR10001")}n.world.disableUnusedAttr(n.world.GL.gl,o),1==t.glBlend.blendEnabled?(n.world.GL.gl.isEnabled(n.world.GL.gl.BLEND)||n.world.GL.gl.enable(n.world.GL.gl.BLEND),n.world.GL.gl.blendFunc(n.world.GL.gl[t.glBlend.blendParamSrc],n.world.GL.gl[t.glBlend.blendParamDest])):(n.world.GL.gl.disable(n.world.GL.gl.BLEND),n.world.GL.gl.enable(n.world.GL.gl.DEPTH_TEST)),n.world.setMatrixUniforms(t,this.pMatrix,t.mvMatrix),n.world.GL.gl.drawElements(n.world.GL.gl[t.glDrawElements.mode],t.glDrawElements.numberOfIndicesRender,n.world.GL.gl.UNSIGNED_SHORT,0),t.instancedDraws.overrideDrawArraysInstance(t),this.mvPopMatrix(t.mvMatrix,this.mvMatrixStack)};var i=a.default.operation.draws;r.default=i},{"../program/manifest":16,"./events":5,"./matrix-world":12,"./raycast":13}],9:[function(t,e,r){"use strict";Object.defineProperty(r,"__esModule",{value:!0}),r.COLOR=function(t,e,r){var o=this;o.r=parseFloat(t),o.g=parseFloat(e),o.b=parseFloat(r),o.R=function(){return parseFloat(o.r)},o.G=function(){return parseFloat(o.g)},o.B=function(){return parseFloat(o.b)},o.set=function(t,e,r){o.r=parseFloat(t),o.g=parseFloat(e),o.b=parseFloat(r)},o.print=function(){console.log("color data RGB format : R:"+o.r+"  G:"+o.g+"  B:"+o.b)}},r.COLOR_ALPHA=l,r.ring=function(t,e,r){},r.customVertex_1=r.customVertex=r.sphereVertex=r.PiramideVertex=r.GeoOfColor=r.CubeVertex=r.SquareVertex=r.TriangleVertex=r.Position=r.RotationVector=r.Point=r.Scale=void 0;var o,s=(o=t("../program/manifest"))&&o.__esModule?o:{default:o},i=t("./utility");class a{constructor(){this.x=1,this.y=1,this.z=1}LinearScale(t){this.x=t,this.y=t,this.z=t}}r.Scale=a;class n{constructor(t,e,r){void 0===r&&(r=0),this.x=t,this.y=e,this.z=r,this.scale=new a}get X(){return parseFloat(this.x*this.scale.x)}get Y(){return parseFloat(this.y*this.scale.y)}get Z(){return parseFloat(this.z*this.scale.z)}}r.Point=n;r.RotationVector=class{constructor(t,e,r,o,i,a){return void 0===e&&(e=0),void 0===r&&(r=0),void 0===o&&(o=0),void 0===i&&(i=0),void 0===a&&(a=0),this.x=t=void 0===t?0:t,this.y=e,this.z=r,this.rotx=o,this.roty=i,this.rotz=a,this.rotationSpeed={x:0,y:0,z:0},this}get rotSpeedX(){return this.rotationSpeed.x}get rotSpeedY(){return this.rotationSpeed.y}get rotSpeedZ(){return this.rotationSpeed.z}get X(){return this.x}get Y(){return this.y}get Z(){return this.z}get RotationVector(){return[this.x,this.y,this.z]}SetDirection(t,e,r){return this.x=t,this.y=e,this.z=r,[this.x,this.y,this.z]}getRotDirX(){return[1,0,0]}getRotDirY(){return[0,1,0]}getRotDirZ(){return[0,0,1]}SetDirectionX(){this.x=1,this.y=0,this.z=0}SetDirectionY(){this.x=0,this.y=1,this.z=0}SetDirectionZ(){this.x=0,this.y=0,this.z=1}SetDirectionXY(){this.x=1,this.y=1,this.z=0}SetDirectionXZ(){this.x=1,this.y=0,this.z=1}SetDirectionYZ(){this.x=0,this.y=1,this.z=1}rotateX(t){this.rotx=t}rotateY(t){this.roty=t}rotateZ(t){this.rotz=t}get rx(){return this.rotx}get ry(){return this.roty}get rz(){return this.rotz}};r.Position=class{constructor(t,e,r){return void 0===e&&(e=0),void 0===r&&(r=0),this.x=t=void 0===t?0:t,this.y=e,this.z=r,this.velY=0,this.velX=0,this.velZ=0,this.inMove=!1,this.targetX=t,this.targetY=e,this.targetZ=r,this.thrust=.01,this}setSpeed(t){"number"==typeof t?this.thrust=t:SYS.DEBUG.WARNING("Description: arguments (w, h) must be type of number.")}translateByX=function(t){this.inMove=!0,this.targetX=t};translateByY(t){this.inMove=!0,this.targetY=t}translateByZ(t){this.inMove=!0,this.targetZ=t}translateByXY(t,e){this.inMove=!0,this.targetX=t,this.targetY=e}translateByXZ(t,e){this.inMove=!0,this.targetX=t,this.targetZ=e}translateByYZ(t,e){this.inMove=!0,this.targetY=t,this.targetZ=e}onTargetPositionReach(){}update(){var t=this.targetX-this.x,e=this.targetY-this.y,r=this.targetZ-this.z,o=Math.sqrt(t*t+e*e+r*r);this.velX=t/o*this.thrust,this.velY=e/o*this.thrust,this.velZ=r/o*this.thrust,1==this.inMove&&(o>this.thrust?(this.x+=this.velX,this.y+=this.velY,this.z+=this.velZ):(this.x=this.targetX,this.y=this.targetY,this.z=this.targetZ,this.inMove=!1,this.onTargetPositionReach()))}get worldLocation(){return[this.x,this.y,this.z]}SetX(t){this.x=t,this.targetX=t,this.inMove=!1}SetY(t){this.y=t,this.targetY=t,this.inMove=!1}SetZ(t){this.z=t,this.targetZ=t,this.inMove=!1}setPosition(t,e,r){this.x=t,this.y=e,this.z=r,this.targetX=t,this.targetY=e,this.targetZ=r,this.inMove=!1}};r.TriangleVertex=class{constructor(t){this.root=t,this.size=t.size,this.dynamicBuffer=s.default.dynamicBuffer,this.pointA=new n(0,1,0),this.pointB=new n(-1,-1,0),this.pointC=new n(1,-1,0)}get vertices(){return new Float32Array([this.pointA.X,this.pointA.Y*this.root.size,this.pointA.Z,this.pointB.X*this.root.size,this.pointB.Y*this.root.size,this.pointB.Z,this.pointC.X*this.root.size,this.pointC.Y*this.root.size,this.pointC.Z])}get indices(){return[0,1,2]}setScale(t){if(this.size=t,1!=this.dynamicBuffer)return s.default.operation.triangle_buffer_procedure(this.root),"dynamicBuffer is false but i will update vertex array prototypical."}};r.SquareVertex=class{constructor(t){this.root=t,this.size=t.size,this.pointA=new n(1,1,0),this.pointB=new n(-1,1,0),this.pointC=new n(1,-1,0),this.pointD=new n(-1,-1,0),this.dynamicBuffer=!0,this.texCoordsPoints={right_top:new n(1,1,0),left_top:new n(0,1,0),right_bottom:new n(1,0,0),left_bottom:new n(0,0,0)},this.colorData={},this.colorData.parent=this.root,this.colorData.color=[new l(1,0,0,1),new l(0,1,0,1),new l(.5,0,1,1),new l(.5,.5,1,1)]}get vertices(){return new Float32Array([this.pointA.X*this.size,this.pointA.Y*this.size,this.pointA.Z,this.pointB.X*this.size,this.pointB.Y*this.size,this.pointB.Z,this.pointC.X*this.size,this.pointC.Y*this.size,this.pointC.Z,this.pointD.X*this.size,this.pointD.Y*this.size,this.pointD.Z])}get texCoords(){return new Float32Array([this.texCoordsPoints.right_top.X,this.texCoordsPoints.right_top.Y,this.texCoordsPoints.left_top.X,this.texCoordsPoints.left_top.Y,this.texCoordsPoints.right_bottom.X,this.texCoordsPoints.right_bottom.Y,this.texCoordsPoints.left_bottom.X,this.texCoordsPoints.left_bottom.Y])}get indices(){return[0,1,2,3,2,1]}setTexCoordScaleFactor(t){this.texCoordsPoints.right_top.y=1+t,this.texCoordsPoints.right_top.x=1+t,this.texCoordsPoints.left_bottom.x=0-t,this.texCoordsPoints.left_bottom.y=0-t,this.texCoordsPoints.left_top.x=0-t,this.texCoordsPoints.left_top.y=1+t,this.texCoordsPoints.right_bottom.x=1+t,this.texCoordsPoints.right_bottom.y=0-t}setScaleByX(t){if(this.pointA.x=t,this.pointB.x=-t,this.pointC.x=t,this.pointD.x=-t,1!=this.dynamicBuffer)return s.default.operation.square_buffer_procedure(this.root),"dynamicBuffer is false but i will update vertex array prototypical."}setScaleByY(t){if(this.pointA.y=t,this.pointB.y=t,this.pointC.y=-t,this.pointD.y=-t,1!=this.dynamicBuffer)return s.default.operation.square_buffer_procedure(this.root),"dynamicBuffer is false but i will update vertex array prototypical."}setScale(t){if(this.size=t,1!=this.dynamicBuffer)return s.default.operation.square_buffer_procedure(this.root),"DynamicBuffer is false but i will update vertex array prototypical."}get color(){var e=[];return this.colorData.color.forEach(t=>{e.push(t.r),e.push(t.g),e.push(t.b),e.push(t.ALPHA())}),new Float32Array(e)}setColorSolid(o,i,a,n){void 0===n&&(n=1),this.colorData.color.forEach((t,e,r)=>{r[e].r=o,r[e].g=i,r[e].b=a,r[e].a=n}),s.default.operation.square_buffer_procedure(this.root)}setColorComponentRed(o){this.colorData.color.forEach((t,e,r)=>{r[e].r=o}),s.default.operation.square_buffer_procedure(this.root)}setColorComponentGreen(o){this.colorData.color.forEach((t,e,r)=>{r[e].g=o}),s.default.operation.square_buffer_procedure(this.root)}setColorComponentBlue(o){this.colorData.color.forEach((t,e,r)=>{r[e].b=o}),s.default.operation.square_buffer_procedure(this.root)}};r.CubeVertex=class{constructor(t){this.root=t,this.size=t.size,this.basePoint=+this.size,this.basePointNeg=-1*this.size,this.dynamicBuffer=!0,this.osciTest=new i.OSCILLATOR(0,2,.002),this.texCoordsPoints={front:{right_top:new n(0,0,0),left_top:new n(0,1,0),right_bottom:new n(1,1,0),left_bottom:new n(1,0,0)},back:{right_top:new n(1,1,0),left_top:new n(1,0,0),right_bottom:new n(0,0,0),left_bottom:new n(0,1,0)},top:{right_top:new n(1,0,0),left_top:new n(0,0,0),right_bottom:new n(0,1,0),left_bottom:new n(1,1,0)},bottom:{right_top:new n(0,0,0),left_top:new n(0,1,0),right_bottom:new n(1,1,0),left_bottom:new n(1,0,0)},right:{right_top:new n(0,0,0),left_top:new n(0,1,0),right_bottom:new n(1,1,0),left_bottom:new n(1,0,0)},left:{right_top:new n(0,0,0),left_top:new n(0,1,0),right_bottom:new n(1,1,0),left_bottom:new n(1,0,0)}},this.Front={pointA:new n(0,0,0),pointB:new n(0,0,0),pointC:new n(0,0,0),pointD:new n(0,0,0)},this.Back={pointA:new n(0,0,0),pointB:new n(0,0,0),pointC:new n(0,0,0),pointD:new n(0,0,0)},this.Top={pointA:new n(0,0,0),pointB:new n(0,0,0),pointC:new n(0,0,0),pointD:new n(0,0,0)},this.Bottom={pointA:new n(0,0,0),pointB:new n(0,0,0),pointC:new n(0,0,0),pointD:new n(0,0,0)},this.Right={pointA:new n(0,0,0),pointB:new n(0,0,0),pointC:new n(0,0,0),pointD:new n(0,0,0)},this.Left={pointA:new n(0,0,0),pointB:new n(0,0,0),pointC:new n(0,0,0),pointD:new n(0,0,0)},this.colorData={},this.colorData.parent=this.root,this.colorData.Front={pointA:new l(1,0,0,1),pointB:new l(0,1,0,1),pointC:new l(0,0,1,1),pointD:new l(0,0,1,1)},this.colorData.Back={pointA:new l(1,0,0,1),pointB:new l(0,1,0,1),pointC:new l(0,0,1,1),pointD:new l(0,0,1,1)},this.colorData.Top={pointA:new l(0,1,0,1),pointB:new l(0,1,0,1),pointC:new l(0,0,1,1),pointD:new l(0,0,1,1)},this.colorData.Bottom={pointA:new l(0,1,0,1),pointB:new l(0,0,1,1),pointC:new l(0,1,0,1),pointD:new l(0,0,1,1)},this.colorData.Right={pointA:new l(1,0,0,1),pointB:new l(0,0,1,1),pointC:new l(0,1,0,1),pointD:new l(0,0,1,1)},this.colorData.Left={pointA:new l(1,0,0,1),pointB:new l(0,0,1,1),pointC:new l(0,1,0,1),pointD:new l(0,0,1,1)},this.colorData.SetRedForAll=function(t){this.Front.pointA.r=t,this.Front.pointB.r=t,this.Front.pointC.r=t,this.Front.pointD.r=t,this.Right.pointA.r=t,this.Right.pointB.r=t,this.Right.pointC.r=t,this.Right.pointD.r=t,this.Back.pointA.r=t,this.Back.pointB.r=t,this.Back.pointC.r=t,this.Back.pointD.r=t,this.Left.pointA.r=t,this.Left.pointB.r=t,this.Left.pointC.r=t,this.Left.pointD.r=t,this.Bottom.pointA.r=t,this.Bottom.pointB.r=t,this.Bottom.pointC.r=t,this.Bottom.pointD.r=t,this.Top.pointA.r=t,this.Top.pointB.r=t,this.Top.pointC.r=t,this.Top.pointD.r=t,s.default.operation.cube_buffer_procedure(this.parent)},this.colorData.SetGreenForAll=function(t){this.Front.pointA.g=t,this.Front.pointB.g=t,this.Front.pointC.g=t,this.Front.pointD.g=t,this.Right.pointA.g=t,this.Right.pointB.g=t,this.Right.pointC.g=t,this.Right.pointD.g=t,this.Back.pointA.g=t,this.Back.pointB.g=t,this.Back.pointC.g=t,this.Back.pointD.g=t,this.Left.pointA.g=t,this.Left.pointB.g=t,this.Left.pointC.g=t,this.Left.pointD.g=t,this.Bottom.pointA.g=t,this.Bottom.pointB.g=t,this.Bottom.pointC.g=t,this.Bottom.pointD.g=t,this.Top.pointA.g=t,this.Top.pointB.g=t,this.Top.pointC.g=t,this.Top.pointD.g=t,s.default.operation.cube_buffer_procedure(this.parent)},this.colorData.SetBlueForAll=function(t){this.Front.pointA.b=t,this.Front.pointB.b=t,this.Front.pointC.b=t,this.Front.pointD.b=t,this.Right.pointA.b=t,this.Right.pointB.b=t,this.Right.pointC.b=t,this.Right.pointD.b=t,this.Back.pointA.b=t,this.Back.pointB.b=t,this.Back.pointC.b=t,this.Back.pointD.b=t,this.Left.pointA.b=t,this.Left.pointB.b=t,this.Left.pointC.b=t,this.Left.pointD.b=t,this.Bottom.pointA.b=t,this.Bottom.pointB.b=t,this.Bottom.pointC.b=t,this.Bottom.pointD.b=t,this.Top.pointA.b=t,this.Top.pointB.b=t,this.Top.pointC.b=t,this.Top.pointD.b=t,s.default.operation.cube_buffer_procedure(this.parent)},this.colorData.SetFrontSolidColor=function(t,e,r,o){void 0===o&&(o=1),this.Front.pointA.r=t,this.Front.pointA.g=e,this.Front.pointA.b=r,this.Front.pointA.a=o,this.Front.pointB.r=t,this.Front.pointB.g=e,this.Front.pointB.b=r,this.Front.pointB.a=o,this.Front.pointC.r=t,this.Front.pointC.g=e,this.Front.pointC.b=r,this.Front.pointC.a=o,this.Front.pointD.r=t,this.Front.pointD.g=e,this.Front.pointD.b=r,this.Front.pointD.a=o,s.default.operation.cube_buffer_procedure(this.parent)},this.colorData.SetRightSolidColor=function(t,e,r,o){void 0===o&&(o=1),this.Right.pointA.r=t,this.Right.pointA.g=e,this.Right.pointA.b=r,this.Right.pointA.a=o,this.Right.pointB.r=t,this.Right.pointB.g=e,this.Right.pointB.b=r,this.Right.pointB.a=o,this.Right.pointC.r=t,this.Right.pointC.g=e,this.Right.pointC.b=r,this.Right.pointC.a=o,this.Right.pointD.r=t,this.Right.pointD.g=e,this.Right.pointD.b=r,this.Right.pointD.a=o,s.default.operation.cube_buffer_procedure(this.parent)},this.colorData.SetBackSolidColor=function(t,e,r,o){void 0===o&&(o=1),this.Back.pointA.r=t,this.Back.pointA.g=e,this.Back.pointA.b=r,this.Back.pointA.a=o,this.Back.pointB.r=t,this.Back.pointB.g=e,this.Back.pointB.b=r,this.Back.pointB.a=o,this.Back.pointC.r=t,this.Back.pointC.g=e,this.Back.pointC.b=r,this.Back.pointC.a=o,this.Back.pointD.r=t,this.Back.pointD.g=e,this.Back.pointD.b=r,this.Back.pointD.a=o,s.default.operation.cube_buffer_procedure(this.parent)},this.colorData.SetLeftSolidColor=function(t,e,r,o){void 0===o&&(o=1),this.Left.pointA.r=t,this.Left.pointA.g=e,this.Left.pointA.b=r,this.Left.pointA.a=o,this.Left.pointB.r=t,this.Left.pointB.g=e,this.Left.pointB.b=r,this.Left.pointB.a=o,this.Left.pointC.r=t,this.Left.pointC.g=e,this.Left.pointC.b=r,this.Left.pointC.a=o,this.Left.pointD.r=t,this.Left.pointD.g=e,this.Left.pointD.b=r,this.Left.pointD.a=o,s.default.operation.cube_buffer_procedure(this.parent)},this.colorData.SetBottomSolidColor=function(t,e,r,o){void 0===o&&(o=1),this.Bottom.pointA.r=t,this.Bottom.pointA.g=e,this.Bottom.pointA.b=r,this.Bottom.pointA.a=o,this.Bottom.pointB.r=t,this.Bottom.pointB.g=e,this.Bottom.pointB.b=r,this.Bottom.pointB.a=o,this.Bottom.pointC.r=t,this.Bottom.pointC.g=e,this.Bottom.pointC.b=r,this.Bottom.pointC.a=o,this.Bottom.pointD.r=t,this.Bottom.pointD.g=e,this.Bottom.pointD.b=r,this.Bottom.pointD.a=o,s.default.operation.cube_buffer_procedure(this.parent)},this.colorData.SetTopSolidColor=function(t,e,r,o){void 0===o&&(o=1),this.Top.pointA.r=t,this.Top.pointA.g=e,this.Top.pointA.b=r,this.Top.pointA.a=o,this.Top.pointB.r=t,this.Top.pointB.g=e,this.Top.pointB.b=r,this.Top.pointB.a=o,this.Top.pointC.r=t,this.Top.pointC.g=e,this.Top.pointC.b=r,this.Top.pointC.a=o,this.Top.pointD.r=t,this.Top.pointD.g=e,this.Top.pointD.b=r,this.Top.pointD.a=o,s.default.operation.cube_buffer_procedure(this.parent)},this.colorData.SetSolidColor=function(t,e,r,o){this.SetBottomSolidColor(t,e,r,o),this.SetLeftSolidColor(t,e,r,o),this.SetBackSolidColor(t,e,r,o),this.SetRightSolidColor(t,e,r,o),this.SetFrontSolidColor(t,e,r,o),this.SetTopSolidColor(t,e,r,o)}}setScaleByX(t){if(this.Left.pointA.x=-t,this.Left.pointB.x=-t,this.Left.pointC.x=-t,this.Left.pointD.x=-t,this.Right.pointA.x=t,this.Right.pointB.x=t,this.Right.pointC.x=t,this.Right.pointD.x=t,this.Top.pointA.x=-t,this.Top.pointB.x=-t,this.Top.pointC.x=t,this.Top.pointD.x=t,this.Bottom.pointA.x=-t,this.Bottom.pointB.x=t,this.Bottom.pointC.x=t,this.Bottom.pointD.x=-t,this.Front.pointA.x=-t,this.Front.pointB.x=t,this.Front.pointC.x=t,this.Front.pointD.x=-t,this.Back.pointA.x=-t,this.Back.pointB.x=-t,this.Back.pointC.x=t,this.Back.pointD.x=t,1!=this.dynamicBuffer)return s.default.operation.cube_buffer_procedure(this.root),"dynamicBuffer is false but i will update vertex array prototypical."}setScaleByY(t){if(this.Left.pointA.y=-t,this.Left.pointB.y=-t,this.Left.pointC.y=t,this.Left.pointD.y=t,this.Right.pointA.y=-t,this.Right.pointB.y=t,this.Right.pointC.y=t,this.Right.pointD.y=-t,this.Top.pointA.y=t,this.Top.pointB.y=t,this.Top.pointC.y=t,this.Top.pointD.y=t,this.Bottom.pointA.y=-t,this.Bottom.pointB.y=-t,this.Bottom.pointC.y=-t,this.Bottom.pointD.y=-t,this.Front.pointA.y=-t,this.Front.pointB.y=-t,this.Front.pointC.y=t,this.Front.pointD.y=t,this.Back.pointA.y=-t,this.Back.pointB.y=t,this.Back.pointC.y=t,this.Back.pointD.y=-t,1!=this.dynamicBuffer)return s.default.operation.cube_buffer_procedure(this.root),"dynamicBuffer is false but i will update vertex array prototypical."}setScaleByZ(t){if(this.Left.pointA.z=-t,this.Left.pointB.z=t,this.Left.pointC.z=t,this.Left.pointD.z=-t,this.Right.pointA.z=-t,this.Right.pointB.z=-t,this.Right.pointC.z=t,this.Right.pointD.z=t,this.Top.pointA.z=t,this.Top.pointB.z=t,this.Top.pointC.z=t,this.Top.pointD.z=t,this.Bottom.pointA.z=-t,this.Bottom.pointB.z=-t,this.Bottom.pointC.z=-t,this.Bottom.pointD.z=-t,this.Front.pointA.z=t,this.Front.pointB.z=t,this.Front.pointC.z=t,this.Front.pointD.z=t,this.Back.pointA.z=-t,this.Back.pointB.z=-t,this.Back.pointC.z=-t,this.Back.pointD.z=-t,1!=this.dynamicBuffer)return s.default.operation.cube_buffer_procedure(this.root),"dynamicBuffer is false but i will update vertex array prototypical."}setScale(t){if(this.size=t,this.basePoint=+this.size,this.basePointNeg=-1*this.size,1!=this.dynamicBuffer)return s.default.operation.cube_buffer_procedure(this.root),"dynamicBuffer is false but i will update vertex array prototypical."}setTexCoordScaleFactor(t){function e(t){return t<=0?-1:1}for(var r in this.texCoordsPoints)this.texCoordsPoints[r].right_top.y=this.texCoordsPoints[r].right_top.y+t*e(this.texCoordsPoints[r].right_top.y),this.texCoordsPoints[r].right_top.x=this.texCoordsPoints[r].right_top.x+t*e(this.texCoordsPoints[r].right_top.x),this.texCoordsPoints[r].left_bottom.x=this.texCoordsPoints[r].left_bottom.x+t*e(this.texCoordsPoints[r].left_bottom.x),this.texCoordsPoints[r].left_bottom.y=this.texCoordsPoints[r].left_bottom.y+t*e(this.texCoordsPoints[r].left_bottom.y),this.texCoordsPoints[r].left_top.x=this.texCoordsPoints[r].left_top.x+t*e(this.texCoordsPoints[r].left_top.x),this.texCoordsPoints[r].left_top.y=this.texCoordsPoints[r].left_top.y+t*e(this.texCoordsPoints[r].left_top.y),this.texCoordsPoints[r].right_bottom.x=this.texCoordsPoints[r].right_bottom.x+t*e(this.texCoordsPoints[r].right_bottom.x),this.texCoordsPoints[r].right_bottom.y=this.texCoordsPoints[r].right_bottom.y+t*e(this.texCoordsPoints[r].right_bottom.y)}get vertices(){return new Float32Array([this.basePointNeg+this.Front.pointA.X,this.basePointNeg+this.Front.pointA.Y,this.basePoint+this.Front.pointA.Z,this.basePoint+this.Front.pointB.X,this.basePointNeg+this.Front.pointB.Y,this.basePoint+this.Front.pointB.Z,this.basePoint+this.Front.pointC.X,this.basePoint+this.Front.pointC.Y,this.basePoint+this.Front.pointC.Z,this.basePointNeg+this.Front.pointD.X,this.basePoint+this.Front.pointD.Y,this.basePoint+this.Front.pointD.Z,this.basePointNeg+this.Back.pointA.X,this.basePointNeg+this.Back.pointA.Y,this.basePointNeg+this.Back.pointA.Z,this.basePointNeg+this.Back.pointB.X,this.basePoint+this.Back.pointB.Y,this.basePointNeg+this.Back.pointB.Z,this.basePoint+this.Back.pointC.X,this.basePoint+this.Back.pointC.Y,this.basePointNeg+this.Back.pointC.Z,this.basePoint+this.Back.pointD.X,this.basePointNeg+this.Back.pointD.Y,this.basePointNeg+this.Back.pointD.Z,this.basePointNeg+this.Top.pointA.X,this.basePoint+this.Top.pointA.Y,this.basePointNeg+this.Top.pointA.Z,this.basePointNeg+this.Top.pointB.X,this.basePoint+this.Top.pointB.Y,this.basePoint+this.Top.pointA.Z,this.basePoint+this.Top.pointC.X,this.basePoint+this.Top.pointC.Y,this.basePoint+this.Top.pointA.Z,this.basePoint+this.Top.pointD.X,this.basePoint+this.Top.pointD.Y,this.basePointNeg+this.Top.pointA.Z,this.basePointNeg+this.Bottom.pointA.X,this.basePointNeg+this.Bottom.pointA.Y,this.basePointNeg+this.Bottom.pointA.Z,this.basePoint+this.Bottom.pointB.X,this.basePointNeg+this.Bottom.pointB.Y,this.basePointNeg+this.Bottom.pointB.Z,this.basePoint+this.Bottom.pointC.X,this.basePointNeg+this.Bottom.pointC.Y,this.basePoint+this.Bottom.pointC.Z,this.basePointNeg+this.Bottom.pointD.X,this.basePointNeg+this.Bottom.pointD.Y,this.basePoint+this.Bottom.pointD.Z,this.basePoint+this.Right.pointA.X,this.basePointNeg+this.Right.pointA.Y,this.basePointNeg+this.Right.pointA.Z,this.basePoint+this.Right.pointB.X,this.basePoint+this.Right.pointB.Y,this.basePointNeg+this.Right.pointB.Z,this.basePoint+this.Right.pointC.X,this.basePoint+this.Right.pointC.Y,this.basePoint+this.Right.pointC.Z,this.basePoint+this.Right.pointD.X,this.basePointNeg+this.Right.pointD.Y,this.basePoint+this.Right.pointD.Z,this.basePointNeg+this.Left.pointA.X,this.basePointNeg+this.Left.pointA.Y,this.basePointNeg+this.Left.pointA.Z,this.basePointNeg+this.Left.pointB.X,this.basePointNeg+this.Left.pointB.Y,this.basePoint+this.Left.pointB.Z,this.basePointNeg+this.Left.pointC.X,this.basePoint+this.Left.pointC.Y,this.basePoint+this.Left.pointC.Z,this.basePointNeg+this.Left.pointD.X,this.basePoint+this.Left.pointD.Y,this.basePointNeg+this.Left.pointD.Z])}get texCoords(){return new Float32Array([this.texCoordsPoints.front.right_top.X,this.texCoordsPoints.front.right_top.Y,this.texCoordsPoints.front.left_top.X,this.texCoordsPoints.front.left_top.Y,this.texCoordsPoints.front.right_bottom.X,this.texCoordsPoints.front.right_bottom.Y,this.texCoordsPoints.front.left_bottom.X,this.texCoordsPoints.front.left_bottom.Y,this.texCoordsPoints.back.right_top.X,this.texCoordsPoints.back.right_top.Y,this.texCoordsPoints.back.left_top.X,this.texCoordsPoints.back.left_top.Y,this.texCoordsPoints.back.right_bottom.X,this.texCoordsPoints.back.right_bottom.Y,this.texCoordsPoints.back.left_bottom.X,this.texCoordsPoints.back.left_bottom.Y,this.texCoordsPoints.top.right_top.X,this.texCoordsPoints.top.right_top.Y,this.texCoordsPoints.top.left_top.X,this.texCoordsPoints.top.left_top.Y,this.texCoordsPoints.top.right_bottom.X,this.texCoordsPoints.top.right_bottom.Y,this.texCoordsPoints.top.left_bottom.X,this.texCoordsPoints.top.left_bottom.Y,this.texCoordsPoints.bottom.right_top.X,this.texCoordsPoints.bottom.right_top.Y,this.texCoordsPoints.bottom.left_top.X,this.texCoordsPoints.bottom.left_top.Y,this.texCoordsPoints.bottom.right_bottom.X,this.texCoordsPoints.bottom.right_bottom.Y,this.texCoordsPoints.bottom.left_bottom.X,this.texCoordsPoints.bottom.left_bottom.Y,this.texCoordsPoints.right.right_top.X,this.texCoordsPoints.right.right_top.Y,this.texCoordsPoints.right.left_top.X,this.texCoordsPoints.right.left_top.Y,this.texCoordsPoints.right.right_bottom.X,this.texCoordsPoints.right.right_bottom.Y,this.texCoordsPoints.right.left_bottom.X,this.texCoordsPoints.right.left_bottom.Y,this.texCoordsPoints.left.right_top.X,this.texCoordsPoints.left.right_top.Y,this.texCoordsPoints.left.left_top.X,this.texCoordsPoints.left.left_top.Y,this.texCoordsPoints.left.right_bottom.X,this.texCoordsPoints.left.right_bottom.Y,this.texCoordsPoints.left.left_bottom.X,this.texCoordsPoints.left.left_bottom.Y])}get indices(){return[0,1,2,0,2,3,4,5,6,4,6,7,8,9,10,8,10,11,12,13,14,12,14,15,16,17,18,16,18,19,20,21,22,20,22,23]}get color(){return new Float32Array([this.colorData.Front.pointA.r,this.colorData.Front.pointA.g,this.colorData.Front.pointA.b,this.colorData.Front.pointA.ALPHA(),this.colorData.Front.pointB.r,this.colorData.Front.pointB.g,this.colorData.Front.pointB.b,this.colorData.Front.pointB.ALPHA(),this.colorData.Front.pointC.r,this.colorData.Front.pointC.g,this.colorData.Front.pointC.b,this.colorData.Front.pointC.ALPHA(),this.colorData.Front.pointD.r,this.colorData.Front.pointD.g,this.colorData.Front.pointD.b,this.colorData.Front.pointD.ALPHA(),this.colorData.Right.pointA.r,this.colorData.Right.pointA.g,this.colorData.Right.pointA.b,this.colorData.Right.pointA.ALPHA(),this.colorData.Right.pointB.r,this.colorData.Right.pointB.g,this.colorData.Right.pointB.b,this.colorData.Right.pointB.ALPHA(),this.colorData.Right.pointC.r,this.colorData.Right.pointC.g,this.colorData.Right.pointC.b,this.colorData.Right.pointC.ALPHA(),this.colorData.Right.pointD.r,this.colorData.Right.pointD.g,this.colorData.Right.pointD.b,this.colorData.Right.pointD.ALPHA(),this.colorData.Back.pointA.r,this.colorData.Back.pointA.g,this.colorData.Back.pointA.b,this.colorData.Back.pointA.ALPHA(),this.colorData.Back.pointB.r,this.colorData.Back.pointB.g,this.colorData.Back.pointB.b,this.colorData.Back.pointB.ALPHA(),this.colorData.Back.pointC.r,this.colorData.Back.pointC.g,this.colorData.Back.pointC.b,this.colorData.Back.pointC.ALPHA(),this.colorData.Back.pointD.r,this.colorData.Back.pointD.g,this.colorData.Back.pointD.b,this.colorData.Back.pointD.ALPHA(),this.colorData.Left.pointA.r,this.colorData.Left.pointA.g,this.colorData.Left.pointA.b,this.colorData.Left.pointA.ALPHA(),this.colorData.Left.pointB.r,this.colorData.Left.pointB.g,this.colorData.Left.pointB.b,this.colorData.Left.pointB.ALPHA(),this.colorData.Left.pointC.r,this.colorData.Left.pointC.g,this.colorData.Left.pointC.b,this.colorData.Left.pointC.ALPHA(),this.colorData.Left.pointD.r,this.colorData.Left.pointD.g,this.colorData.Left.pointD.b,this.colorData.Left.pointD.ALPHA(),this.colorData.Bottom.pointA.r,this.colorData.Bottom.pointA.g,this.colorData.Bottom.pointA.b,this.colorData.Bottom.pointA.ALPHA(),this.colorData.Bottom.pointB.r,this.colorData.Bottom.pointB.g,this.colorData.Bottom.pointB.b,this.colorData.Bottom.pointB.ALPHA(),this.colorData.Bottom.pointC.r,this.colorData.Bottom.pointC.g,this.colorData.Bottom.pointC.b,this.colorData.Bottom.pointC.ALPHA(),this.colorData.Bottom.pointD.r,this.colorData.Bottom.pointD.g,this.colorData.Bottom.pointD.b,this.colorData.Bottom.pointD.ALPHA(),this.colorData.Top.pointA.r,this.colorData.Top.pointA.g,this.colorData.Top.pointA.b,this.colorData.Top.pointA.ALPHA(),this.colorData.Top.pointB.r,this.colorData.Top.pointB.g,this.colorData.Top.pointB.b,this.colorData.Top.pointB.ALPHA(),this.colorData.Top.pointC.r,this.colorData.Top.pointC.g,this.colorData.Top.pointC.b,this.colorData.Top.pointC.ALPHA(),this.colorData.Top.pointD.r,this.colorData.Top.pointD.g,this.colorData.Top.pointD.b,this.colorData.Top.pointD.ALPHA()])}};r.GeoOfColor=class{constructor(t){return void 0!==t?"4x4"==t||"square"==t?new Float32Array([1,0,0,1,0,1,0,1,0,0,1,1,.5,1,.5,1]):"triangle"==t?[1,0,0,1,0,1,0,1,0,0,1,1]:"Piramide4"==t?(this.front="test",new Float32Array([1,0,0,1,0,1,0,1,0,0,1,1,1,0,0,1,0,0,1,1,0,1,0,1,1,0,0,1,0,1,0,1,0,0,1,1,1,0,0,1,0,0,1,1,0,1,0,1,0,1,0,1,0,0,1,1,0,1,0,1,0,1,0,1,0,1,0,1,0,0,1,1])):"cube"==t?[[1,1,1,1],[1,1,0,1],[0,1,0,1],[1,.5,.5,1],[1,0,1,1],[0,0,1,1]]:"cubelight"==t||"cube light"==t?new Float32Array([0,0,1,1,0,0,1,1,0,0,1,1,0,0,1,1,0,0,-1,1,0,0,-1,1,0,0,-1,1,0,0,-1,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,-1,0,1,0,-1,0,1,0,-1,0,1,0,-1,0,1,1,0,0,1,1,0,0,1,1,0,0,1,1,0,0,1,-1,0,0,1,-1,0,0,1,-1,0,0,1,-1,0,0,1]):void 0:[1,0,0,1,0,1,0,1,0,0,1,1,.5,1,.5,1]}};r.PiramideVertex=class{constructor(t){this.root=t,this.size=t.size,this.dynamicBuffer=!0,this.spitz=0,this.basePoint=+this.size,this.basePointNeg=-1*this.size,this.colorData={},this.colorData.parent=this.root,this.colorData.Front={pointA:new l(1,0,0,1),pointB:new l(0,1,0,1),pointC:new l(0,0,1,1)},this.colorData.Back={pointA:new l(1,0,0,1),pointB:new l(0,1,0,1),pointC:new l(0,0,1,1)},this.colorData.BottomRight={pointA:new l(0,1,0,1),pointB:new l(0,1,0,1),pointC:new l(0,0,1,1)},this.colorData.Bottom={pointA:new l(0,1,0,1),pointB:new l(0,0,1,1),pointC:new l(0,1,0,1)},this.colorData.Right={pointA:new l(1,0,0,1),pointB:new l(0,0,1,1),pointC:new l(0,1,0,1)},this.colorData.Left={pointA:new l(1,0,0,1),pointB:new l(0,0,1,1),pointC:new l(0,1,0,1)},this.colorData.SetRedForAll=function(t){this.Front.pointA.r=t,this.Front.pointB.r=t,this.Front.pointC.r=t,this.Right.pointA.r=t,this.Right.pointB.r=t,this.Right.pointC.r=t,this.Back.pointA.r=t,this.Back.pointB.r=t,this.Back.pointC.r=t,this.Left.pointA.r=t,this.Left.pointB.r=t,this.Left.pointC.r=t,this.Bottom.pointA.r=t,this.Bottom.pointB.r=t,this.Bottom.pointC.r=t,this.BottomRight.pointA.r=t,this.BottomRight.pointB.r=t,this.BottomRight.pointC.r=t,s.default.operation.piramide_buffer_procedure(this.parent)},this.colorData.SetGreenForAll=function(t){this.Front.pointA.g=t,this.Front.pointB.g=t,this.Front.pointC.g=t,this.Right.pointA.g=t,this.Right.pointB.g=t,this.Right.pointC.g=t,this.Back.pointA.g=t,this.Back.pointB.g=t,this.Back.pointC.g=t,this.Left.pointA.g=t,this.Left.pointB.g=t,this.Left.pointC.g=t,this.Bottom.pointA.g=t,this.Bottom.pointB.g=t,this.Bottom.pointC.g=t,this.BottomRight.pointA.g=t,this.BottomRight.pointB.g=t,this.BottomRight.pointC.g=t,s.default.operation.piramide_buffer_procedure(this.parent)},this.colorData.SetBlueForAll=function(t){this.Front.pointA.b=t,this.Front.pointB.b=t,this.Front.pointC.b=t,this.Right.pointA.b=t,this.Right.pointB.b=t,this.Right.pointC.b=t,this.Back.pointA.b=t,this.Back.pointB.b=t,this.Back.pointC.b=t,this.Left.pointA.b=t,this.Left.pointB.b=t,this.Left.pointC.b=t,this.Bottom.pointA.b=t,this.Bottom.pointB.b=t,this.Bottom.pointC.b=t,this.BottomRight.pointA.b=t,this.BottomRight.pointB.b=t,this.BottomRight.pointC.b=t,s.default.operation.piramide_buffer_procedure(this.parent)}}setScale(t){if(this.size=t,this.basePoint=+this.size,this.basePointNeg=-1*this.size,1!=this.dynamicBuffer)return s.default.operation.piramide_buffer_procedure(this.root),"dynamicBuffer is false but i will update vertex array prototypical."}setSpitz(t){this.spitz=t,1!=this.dynamicBuffer&&s.default.operation.piramide_buffer_procedure(this.root)}get verticesC(){return new Float32Array([-1,-1,1,1,-1,1,0,15,0,0,15,0,-1,-1,-1,0,15,0,0,15,0,1,-1,-1,0,15,0,0,15,0,0,15,0,0,15,0,-1,-1,-1,1,-1,-1,1,-1,1,-1,-1,1,1,-1,-1,0,15,0,0,15,0,1,-1,1,-1,-1,-1,-1,-1,1,0,15,0,0,15,0])}get normals(){return new Float32Array([0,0,1,0,0,1,0,0,1,0,0,1,0,0,-1,0,0,-1,0,0,-1,0,0,-1,0,1,0,0,1,0,0,1,0,0,1,0,0,-1,0,0,-1,0,0,-1,0,0,-1,0,1,0,0,1,0,0,1,0,0,1,0,0,-1,0,0,-1,0,0,-1,0,0,-1,0,0])}get texCoords(){return new Float32Array([0,0,1,0,1,1,0,1,1,0,1,1,0,1,0,0,0,1,0,0,1,0,1,1,1,1,0,1,0,0,1,0,1,0,1,1,0,1,0,0,0,0,1,0,1,1,0,1])}get indices(){return[0,1,2,0,2,3,4,5,6,4,6,7,8,9,10,8,10,11,12,13,14,12,14,15,16,17,18,16,18,19,20,21,22,20,22,23]}get color(){return new Float32Array([this.colorData.Front.pointA.r,this.colorData.Front.pointA.g,this.colorData.Front.pointA.b,this.colorData.Front.pointA.ALPHA(),this.colorData.Front.pointB.r,this.colorData.Front.pointB.g,this.colorData.Front.pointB.b,this.colorData.Front.pointB.ALPHA(),this.colorData.Front.pointC.r,this.colorData.Front.pointC.g,this.colorData.Front.pointC.b,this.colorData.Front.pointC.ALPHA(),this.colorData.Right.pointA.r,this.colorData.Right.pointA.g,this.colorData.Right.pointA.b,this.colorData.Right.pointA.ALPHA(),this.colorData.Right.pointB.r,this.colorData.Right.pointB.g,this.colorData.Right.pointB.b,this.colorData.Right.pointB.ALPHA(),this.colorData.Right.pointC.r,this.colorData.Right.pointC.g,this.colorData.Right.pointC.b,this.colorData.Right.pointC.ALPHA(),this.colorData.Back.pointA.r,this.colorData.Back.pointA.g,this.colorData.Back.pointA.b,this.colorData.Back.pointA.ALPHA(),this.colorData.Back.pointB.r,this.colorData.Back.pointB.g,this.colorData.Back.pointB.b,this.colorData.Back.pointB.ALPHA(),this.colorData.Back.pointC.r,this.colorData.Back.pointC.g,this.colorData.Back.pointC.b,this.colorData.Back.pointC.ALPHA(),this.colorData.Left.pointA.r,this.colorData.Left.pointA.g,this.colorData.Left.pointA.b,this.colorData.Left.pointA.ALPHA(),this.colorData.Left.pointB.r,this.colorData.Left.pointB.g,this.colorData.Left.pointB.b,this.colorData.Left.pointB.ALPHA(),this.colorData.Left.pointC.r,this.colorData.Left.pointC.g,this.colorData.Left.pointC.b,this.colorData.Left.pointC.ALPHA(),this.colorData.Bottom.pointA.r,this.colorData.Bottom.pointA.g,this.colorData.Bottom.pointA.b,this.colorData.Bottom.pointA.ALPHA(),this.colorData.Bottom.pointB.r,this.colorData.Bottom.pointB.g,this.colorData.Bottom.pointB.b,this.colorData.Bottom.pointB.ALPHA(),this.colorData.Bottom.pointC.r,this.colorData.Bottom.pointC.g,this.colorData.Bottom.pointC.b,this.colorData.Bottom.pointC.ALPHA(),this.colorData.BottomRight.pointA.r,this.colorData.BottomRight.pointA.g,this.colorData.BottomRight.pointA.b,this.colorData.BottomRight.pointA.ALPHA(),this.colorData.BottomRight.pointB.r,this.colorData.BottomRight.pointB.g,this.colorData.BottomRight.pointB.b,this.colorData.BottomRight.pointB.ALPHA(),this.colorData.BottomRight.pointC.r,this.colorData.BottomRight.pointC.g,this.colorData.BottomRight.pointC.b,this.colorData.BottomRight.pointC.ALPHA()])}get vertices(){return new Float32Array([0,this.basePoint+this.spitz,0,this.basePointNeg,this.basePointNeg,this.basePoint,this.basePoint,this.basePointNeg,this.basePoint,0,this.basePoint+this.spitz,0,this.basePoint,this.basePointNeg,this.basePoint,this.basePoint,this.basePointNeg,this.basePointNeg,0,this.basePoint+this.spitz,0,this.basePoint,this.basePointNeg,this.basePointNeg,this.basePointNeg,this.basePointNeg,this.basePointNeg,0,this.basePoint+this.spitz,0,this.basePointNeg,this.basePointNeg,this.basePointNeg,this.basePointNeg,this.basePointNeg,this.basePoint,this.basePointNeg,this.basePointNeg,this.basePoint,this.basePoint,this.basePointNeg,this.basePoint,this.basePoint,this.basePointNeg,this.basePointNeg,this.basePointNeg,this.basePointNeg,this.basePoint,this.basePoint,this.basePointNeg,this.basePointNeg,this.basePointNeg,this.basePointNeg,this.basePointNeg])}};r.sphereVertex=class{createGeoData(t){this.size=t.size,this.basePoint=+this.size,this.basePointNeg=-1*this.size,this.dynamicBuffer=!0,this.latitudeBands=t.latitudeBands,this.longitudeBands=t.longitudeBands,this.radius=t.radius,this.vertexPositionData=[],this.normalData=[],this.textureCoordData=[];for(var e=0;e<=this.latitudeBands;e++)for(var r=e*Math.PI/this.latitudeBands,o=Math.sin(r),i=Math.cos(r),a=0;a<=this.longitudeBands;a++){var n=2*a*Math.PI/this.longitudeBands,s=Math.sin(n),l=Math.cos(n)*o,d=i,h=s*o,n=1-a/this.longitudeBands,s=1-e/this.latitudeBands;this.normalData.push(l),this.normalData.push(d),this.normalData.push(h),this.textureCoordData.push(n),this.textureCoordData.push(s),this.vertexPositionData.push(this.radius*l),this.vertexPositionData.push(this.radius*d),this.vertexPositionData.push(this.radius*h)}this.indexData=[];for(e=0;e<this.latitudeBands;e++)for(a=0;a<this.longitudeBands;a++){var u=e*(this.longitudeBands+1)+a,g=u+this.longitudeBands+1;this.indexData.push(u),this.indexData.push(g),this.indexData.push(u+1),this.indexData.push(g),this.indexData.push(g+1),this.indexData.push(u+1)}}constructor(t){this.root=t,this.createGeoData(this.root)}setRadius(t){this.radius=t,this.root.radius=t,1==this.dynamicBuffer&&(this.createGeoData(this.root),s.default.operation.sphere_buffer_procedure(this.root))}get vertices(){return new Float32Array(this.vertexPositionData)}get texCoords(){return new Float32Array(this.textureCoordData)}get normals(){return new Float32Array(this.normalData)}get indices(){return this.indexData}};function l(t,e,r,o){var i=this;i.r=parseFloat(t),i.g=parseFloat(e),i.b=parseFloat(r),void 0===o&&(o=1),i.a=parseFloat(o),i.R=function(){return parseFloat(i.r)},i.G=function(){return parseFloat(i.g)},i.B=function(){return parseFloat(i.b)},i.ALPHA=function(){return parseFloat(i.a)},i.set=function(t,e,r,o){i.r=parseFloat(t),i.g=parseFloat(e),i.b=parseFloat(r),i.a=parseFloat(o)},i.print=function(){console.log("color data RGB format : R:"+i.r+"  G:"+i.g+"  B:"+i.b+"  ALPHA:"+i.ALPHA)}}r.customVertex=class{createGeoData(t){if(this.size=t.size,this.basePoint=+this.size,this.basePointNeg=-1*this.size,this.dynamicBuffer=!0,this.latitudeBands=t.latitudeBands,this.longitudeBands=t.longitudeBands,this.radius=t.radius,this.vertexPositionData=[],this.normalData=[],this.textureCoordData=[],"spiral"==this.root.custom_type){for(var e=0;e<=this.latitudeBands;e++)for(var r=e*Math.PI/this.latitudeBands,o=(Math.sin(r),Math.cos(r),0);o<=this.longitudeBands;o++){var i=2*o*Math.PI/this.longitudeBands,a=Math.sin(i),i=Math.cos(i),n=e*i,s=o*a,l=o*i,d=1-o/this.longitudeBands,h=1-e/this.latitudeBands;this.normalData.push(n),this.normalData.push(s),this.normalData.push(l),this.textureCoordData.push(d),this.textureCoordData.push(h),this.vertexPositionData.push(this.radius*n),this.vertexPositionData.push(this.radius*s),this.vertexPositionData.push(this.radius*l)}this.indexData=[];for(e=0;e<this.latitudeBands;e++)for(o=0;o<this.longitudeBands;o++){var u=(m=e*(this.longitudeBands+1)+o)+this.longitudeBands+1;this.indexData.push(m),this.indexData.push(u),this.indexData.push(m+1),this.indexData.push(u),this.indexData.push(u+1),this.indexData.push(m+1)}}else if("cubic"==this.root.custom_type){for(var g=0;g<8;g++){n=g+ +S1.GET(),s=1,l=g+1;this.normalData.push(n),this.normalData.push(s),this.normalData.push(l),this.textureCoordData.push(d),this.textureCoordData.push(h),this.vertexPositionData.push(this.radius*n),this.vertexPositionData.push(this.radius*s),this.vertexPositionData.push(this.radius*l)}this.indexData=[];for(g=0;g<8;g++){var m,u=(m=12+g)+2+1;this.indexData.push(m),this.indexData.push(u),this.indexData.push(m+1),this.indexData.push(u),this.indexData.push(u+1),this.indexData.push(m+1)}}}constructor(t){this.root=t,this.createGeoData(this.root)}setRadius(t){return this.radius=t,this.root.radius=t,1==this.dynamicBuffer?(this.createGeoData(this.root),s.default.operation.sphere_buffer_procedure(this.root),void(this.root.glDrawElements.numberOfIndicesRender=this.indices.length)):(s.default.operation.sphere_buffer_procedure(this.root),this.root.glDrawElements.numberOfIndicesRender=this.indices.length,"dynamicBuffer is false but i will update vertex array prototypical.")}get vertices(){return new Float32Array(this.vertexPositionData)}get texCoords(){return new Float32Array(this.textureCoordData)}get normals(){return new Float32Array(this.normalData)}get indices(){return this.indexData}};r.customVertex_1=class{createGeoData(t){for(var e=new Float32Array(192),r=new Float32Array(192),o=new Float32Array(128),i=new Uint16Array(192),a=2*Math.PI/32,n=0,s=0,l=0,d=0;d<32;d++){var h=Math.cos(a*d),u=Math.sin(a*d);e[n++]=.25*h,e[n++]=.25*u,e[n++]=0,o[s++]=.5+.5*h*.5,o[s++]=.5+.5*u*.5,e[n++]=.5*h,e[n++]=.5*u,e[n++]=0,o[s++]=.5+.5*h,o[s++]=.5+.5*u}for(d=0;d<31;d++)i[l++]=2*d,i[l++]=2*d+1,i[l++]=2*d+3,i[l++]=2*d,i[l++]=2*d+3,i[l++]=2*d+2;for(i[l++]=2*d,i[l++]=2*d+1,i[l++]=1,i[l++]=2*d,i[l++]=1,d=i[l++]=0;d<64;d++)r[3*d]=r[3*d+1]=0,r[3*d+2]=1}}},{"../program/manifest":16,"./utility":14}],10:[function(t,e,r){"use strict";Object.defineProperty(r,"__esModule",{value:!0}),r.callReDraw_=r.reDrawID=r.animate=void 0;var o,i=(o=t("../program/manifest"))&&o.__esModule?o:{default:o},a=t("./matrix-world"),n=t("./engine"),s=function(t,e){if(!e&&t&&t.__esModule)return t;if(null===t||"object"!=typeof t&&"function"!=typeof t)return{default:t};e=l(e);if(e&&e.has(t))return e.get(t);var r,o={},i=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(r in t){var a;"default"!==r&&Object.prototype.hasOwnProperty.call(t,r)&&((a=i?Object.getOwnPropertyDescriptor(t,r):null)&&(a.get||a.set)?Object.defineProperty(o,r,a):o[r]=t[r])}o.default=t,e&&e.set(t,o);return o}(t("./raycast"));function l(t){if("function"!=typeof WeakMap)return null;var e=new WeakMap,r=new WeakMap;return(l=function(t){return t?r:e})(t)}r.animate=function(t){var e=(new Date).getTime();0!=n.lastTime&&(e=e-n.lastTime,t.rotation.rotx+=t.rotation.rotSpeedX*e/1e3,t.rotation.roty+=t.rotation.rotSpeedY*e/1e3,t.rotation.rotz+=t.rotation.rotSpeedZ*e/1e3,t.position.update())};r.reDrawID=0,i.default.operation.reDrawGlobal=function(){(0,n.modifyLooper)(0),r.reDrawID=requestAnimationFrame(a.reDraw),a.world.renderPerspective();for(var t=0;t<i.default.updateBeforeDraw.length;t++)i.default.updateBeforeDraw[t].UPDATE();for(;n.looper<=a.world.contentList.length-1;)"triangle"==a.world.contentList[n.looper].type?(a.world.GL.gl.useProgram(a.world.contentList[n.looper].shaderProgram),a.world.drawTriangle(a.world.contentList[n.looper]),a.world.animate(a.world.contentList[n.looper])):"square"==a.world.contentList[n.looper].type?(a.world.GL.gl.useProgram(a.world.contentList[n.looper].shaderProgram),a.world.drawSquare(a.world.contentList[n.looper]),a.world.animate(a.world.contentList[n.looper])):"cube"==a.world.contentList[n.looper].type||"cubeTex"==a.world.contentList[n.looper].type||"cubeLightTex"==a.world.contentList[n.looper].type?(a.world.GL.gl.useProgram(a.world.contentList[n.looper].shaderProgram),a.world.drawCube(a.world.contentList[n.looper]),a.world.animate(a.world.contentList[n.looper])):"pyramid"==a.world.contentList[n.looper].type?(a.world.GL.gl.useProgram(a.world.contentList[n.looper].shaderProgram),a.world.drawPyramid(a.world.contentList[n.looper]),a.world.animate(a.world.contentList[n.looper])):"obj"==a.world.contentList[n.looper].type?(a.world.GL.gl.useProgram(a.world.contentList[n.looper].shaderProgram),a.world.drawObj(a.world.contentList[n.looper]),a.world.animate(a.world.contentList[n.looper])):"squareTex"==a.world.contentList[n.looper].type?(a.world.GL.gl.useProgram(a.world.contentList[n.looper].shaderProgram),a.world.drawSquareTex(a.world.contentList[n.looper]),a.world.animate(a.world.contentList[n.looper])):"sphereLightTex"!=a.world.contentList[n.looper].type&&"sphere"!=a.world.contentList[n.looper].type&&"generatorLightTex"!=a.world.contentList[n.looper].type||(a.world.GL.gl.useProgram(a.world.contentList[n.looper].shaderProgram),a.world.drawSphere(a.world.contentList[n.looper]),a.world.animate(a.world.contentList[n.looper])),(0,n.modifyLooper)(n.looper+1);i.default.raycast&&(s.touchCoordinate.enabled=!1),(0,n.updateFPS)(1)},i.default.operation.CameraPerspective=function(){this.GL.gl.viewport(0,0,canvas.width,canvas.height),this.GL.gl.clear(this.GL.gl.COLOR_BUFFER_BIT|this.GL.gl.DEPTH_BUFFER_BIT),mat4.perspective(this.pMatrix,degToRad(i.default.camera.viewAngle),this.GL.gl.viewportWidth/this.GL.gl.viewportHeight,i.default.camera.nearViewpoint,i.default.camera.farViewpoint)};r.callReDraw_=function(){requestAnimationFrame(a.reDraw)}},{"../program/manifest":16,"./engine":4,"./matrix-world":12,"./raycast":13}],11:[function(t,e,r){"use strict";Object.defineProperty(r,"__esModule",{value:!0}),r.default=void 0;var o,i=(o=t("../program/manifest"))&&o.__esModule?o:{default:o},a=t("./matrix-world");i.default.tools.loadTextureImage=function(t,e){var r=t.createTexture();return r.image=new Image,r.image.crossOrigin="anonymous",r.image.onload=function(){a.world.handleLoadedTexture(r,t)},r.image.src=e,r},i.default.tools.BasicTextures=function(t,e){e.bindTexture(e.TEXTURE_2D,t),e.pixelStorei(e.UNPACK_FLIP_Y_WEBGL,!0),e.texParameteri(e.TEXTURE_2D,e.TEXTURE_MAG_FILTER,e.NEAREST),e.texParameteri(e.TEXTURE_2D,e.TEXTURE_MIN_FILTER,e.NEAREST),e.texParameteri(e.TEXTURE_2D,e.TEXTURE_WRAP_S,e.CLAMP_TO_EDGE),e.texParameteri(e.TEXTURE_2D,e.TEXTURE_WRAP_T,e.CLAMP_TO_EDGE),e.texImage2D(e.TEXTURE_2D,0,e.RGBA,e.RGBA,e.UNSIGNED_BYTE,t.image),e.bindTexture(e.TEXTURE_2D,null)},i.default.tools.loadVideoTexture=function(t,e){var r;e&&1!=e.width&&(r=a.world.GL.gl,void 0===i.default.textures[t=t]&&(i.default.textures[t]=r.createTexture()),r.activeTexture(r.TEXTURE0),r.bindTexture(r.TEXTURE_2D,i.default.textures[t]),r.pixelStorei(r.UNPACK_FLIP_Y_WEBGL,!1),r.texParameteri(r.TEXTURE_2D,r.TEXTURE_MAG_FILTER,r.LINEAR),r.texParameteri(r.TEXTURE_2D,r.TEXTURE_MIN_FILTER,r.LINEAR),r.texImage2D(r.TEXTURE_2D,0,r.RGBA,r.RGBA,r.UNSIGNED_BYTE,e),r.generateMipmap(r.TEXTURE_2D))};var n=i.default.textools;r.default=n},{"../program/manifest":16,"./matrix-world":12}],12:[function(t,e,r){"use strict";Object.defineProperty(r,"__esModule",{value:!0}),r.modifyFrames=function(t){r.frames=a=t},r.defineworld=function(t){{if(r.world=L=new Object,L.GL=new f.defineWebGLWorld(t),void 0===L.GL.gl)return delete this.GL,0;L.GL.gl.clearColor(m.default.glBackgroundColor.r,m.default.glBackgroundColor.g,m.default.glBackgroundColor.b,m.default.glBackgroundColor.a),L.GL.gl.enable(L.GL.gl.DEPTH_TEST),(0,f.initiateFPS)()}return L.pMatrix=mat4.create(),L.mvMatrixStack=new Array,L.contentList=new Array,n[n.length]=L,m.default.limitations.maxTexturesInFragmentShader=L.GL.gl.getParameter(L.GL.gl.MAX_TEXTURE_IMAGE_UNITS),m.default.limitations.ALIASED_POINT_SIZE_RANGE=L.GL.gl.getParameter(L.GL.gl.ALIASED_POINT_SIZE_RANGE),m.default.limitations.DEPTH_BITS=L.GL.gl.getParameter(L.GL.gl.DEPTH_BITS),m.default.limitations.MAX_SAMPLES=L.GL.gl.getParameter(L.GL.gl.MAX_SAMPLES),m.default.limitations.MAX_TEXTURE_SIZE=L.GL.gl.getParameter(L.GL.gl.MAX_TEXTURE_SIZE),m.default.limitations.MAX_VERTEX_ATTRIBS=L.GL.gl.getParameter(L.GL.gl.MAX_VERTEX_ATTRIBS),m.default.limitations.MAX_ELEMENTS_VERTICES=L.GL.gl.getParameter(L.GL.gl.MAX_ELEMENTS_VERTICES),L.getShader=f.loadShaders,L.initShaders=f.initShaders,L.handleLoadedTexture=m.default.tools.BasicTextures,L.initTexture=m.default.tools.loadTextureImage,L.disableUnusedAttr=function(t,e){for(var r=e;r<4;)t.disableVertexAttribArray(r),r+=1},L.mvPushMatrix=m.default.operation.PUSH_MATRIX,L.mvPopMatrix=m.default.operation.POP_MATRIX,L.setMatrixUniforms=m.default.operation.SET_MATRIX_UNIFORMS,L.renderPerspective=m.default.operation.CameraPerspective,L.animate=o.animate,L.bufferTriangle=m.default.operation.triangle_buffer_procedure,L.drawTriangle=m.default.operation.draws.triangle,L.bufferSquare=m.default.operation.square_buffer_procedure,L.drawSquare=m.default.operation.draws.square,L.bufferObj=m.default.operation.obj_buffer_procedure,L.bufferCube=m.default.operation.cube_buffer_procedure,L.drawCube=m.default.operation.draws.cube,L.bufferPyramid=m.default.operation.piramide_buffer_procedure,L.drawPyramid=m.default.operation.draws.piramide,L.drawObj=m.default.operation.draws.drawObj,L.bufferSquareTex=m.default.operation.squareTex_buffer_procedure,L.drawSquareTex=m.default.operation.draws.drawSquareTex,L.drawSprite2d=m.default.operation.draws.sprite2d,L.bufferSprite2d=m.default.operation.sprite2d_buffer_procedure,L.drawSphere=m.default.operation.draws.sphere,L.bufferSphere=m.default.operation.sphere_buffer_procedure,r.reDraw=s=m.default.operation.reDrawGlobal,L.Add=function(t,e,r,o,i,a){var n,s,l;if("triangle"==t&&((s=new Object).name=void 0!==r?r:"triangle_instance_"+Math.floor(1e5*Math.random()+1),s.streamTextures=null,s.type=t,s.size=e,s.sides=3,s.shaderProgram=this.initShaders(this.GL.gl,t+"-shader-fs",t+"-shader-vs"),s.position=new p.Position(0,0,-5),s.rotation=new p.RotationVector(1,0,0),s.color=new p.GeoOfColor("triangle"),s.mvMatrix=mat4.create(),s.geometry=new p.TriangleVertex(s),s.glBlend=new c._glBlend,s.instancedDraws={numberOfInstance:10,array_of_local_offset:[12,0,0],overrideDrawArraysInstance:function(t){}},s.shaderProgram&&(this.bufferTriangle(s),s.glDrawElements=new c._DrawElements(s.vertexColorBuffer.numItems),this.contentList[this.contentList.length]=s,m.default.scene[s.name]=s)),"square"==t&&((n=new Object).name=void 0!==r?r:"square_instance_"+Math.floor(1e5*Math.random()+1),n.streamTextures=null,n.type=t,n.size=e,n.sides=4,n.shaderProgram=this.initShaders(this.GL.gl,t+"-shader-fs",t+"-shader-vs"),n.position=new p.Position(0,0,-5),n.rotation=new p.RotationVector(1,0,0),n.color=!0,n.mvMatrix=mat4.create(),n.geometry=new p.SquareVertex(n),n.glBlend=new c._glBlend,n.instancedDraws={numberOfInstance:10,array_of_local_offset:[12,0,0],overrideDrawArraysInstance:function(t){}},n.shaderProgram&&(this.bufferSquare(n),n.glDrawElements=new c._DrawElements(n.vertexColorBuffer.numItems),n.glDrawElements.mode="TRIANGLE_STRIP",this.contentList[this.contentList.length]=n,m.default.scene[n.name]=n)),"squareTex"==t){if((n=new Object).name=void 0!==r?r:"square_instance_"+Math.floor(1e5*Math.random()+1),n.streamTextures=null,n.type=t,n.size=e,n.sides=4,n.position=new p.Position(0,0,-5),n.rotation=new p.RotationVector(1,0,0),n.mvMatrix=mat4.create(),n.geometry=new p.SquareVertex(n),n.glBlend=new c._glBlend,n.LightsData={directionLight:new p.COLOR(1,1,1),ambientLight:new p.COLOR(1,1,1),lightingDirection:new p.COLOR(1,1,0)},void 0!==o)if("string"==typeof o)n.texture=this.initTexture(this.GL.gl,o),n.textures=[],n.textures[0]=n.texture;else if("object"==typeof o){n.textures=[],n.texture=!0,(0,f.RegenerateShader)(t+"-shader-fs",o.source.length,o.mix_operation);for(var d=0;d<o.source.length;++d)n.textures.push(this.initTexture(this.GL.gl,o.source[d]));n.shaderProgram=this.initShaders(this.GL.gl,t+"-shader-fs",t+"-shader-vs")}else alert("Exec add obj : texturePaths : path is unknow typeof");else n.texture=this.initTexture(this.GL.gl,"res/images/icon2.jpg"),n.textures[0]=n.texture,n.shaderProgram=this.initShaders(this.GL.gl,t+"-shader-fs",t+"-shader-vs");n.LightMap=new p.GeoOfColor("square"),n.custom=new Object,n.custom.gl_texture=null,n.instancedDraws={numberOfInstance:10,array_of_local_offset:[12,0,0],overrideDrawArraysInstance:function(t){}},n.shaderProgram&&(this.bufferSquareTex(n),n.glDrawElements=new c._DrawElements(n.vertexIndexBuffer.numItems),this.contentList[this.contentList.length]=n,m.default.scene[n.name]=n)}if("cube"==t&&((l=new Object).name=void 0!==r?r:"cube_instance_"+Math.floor(1e5*Math.random()+1),l.streamTextures=null,l.type=t,l.size=e,l.sides=12,l.shaderProgram=this.initShaders(this.GL.gl,t+"-shader-fs",t+"-shader-vs"),l.position=new p.Position(0,0,-5),l.rotation=new p.RotationVector(1,0,0),l.color=!0,l.mvMatrix=mat4.create(),l.geometry=new p.CubeVertex(l),l.instancedDraws={numberOfInstance:10,array_of_local_offset:[12,0,0],overrideDrawArraysInstance:function(t){}},l.glBlend=new c._glBlend,l.shaderProgram&&l.geometry&&(this.bufferCube(l),l.glDrawElements=new c._DrawElements(l.vertexIndexBuffer.numItems),this.contentList[this.contentList.length]=l,m.default.scene[l.name]=l)),"sphereTex"==t||"sphereLightTex"==t){var h=new Object;if(h.name=void 0!==r?r:"sphereObject_instance_"+Math.floor(1e5*Math.random()+1),h.streamTextures=null,h.type=t,h.position=new p.Position(0,0,-5),h.size=e,h.sides=12,h.rotation=new p.RotationVector(0,1,0),h.LightsData={directionLight:new p.COLOR(1,1,1),ambientLight:new p.COLOR(1,1,1),lightingDirection:new p.COLOR(1,1,0)},h.textures=[],void 0!==o)if("string"==typeof o)h.texture=this.initTexture(this.GL.gl,o),h.textures.push(l.texture);else if("object"==typeof o){h.textures=[],h.texture=!0,(0,f.RegenerateShader)(t+"-shader-fs",o.source.length,o.mix_operation);for(d=0;d<o.source.length;++d)h.textures.push(this.initTexture(this.GL.gl,o.source[d]));h.shaderProgram=this.initShaders(this.GL.gl,t+"-shader-fs",t+"-shader-vs")}else alert("Exec add obj : texturePaths : path is unknow typeof");else h.texture=this.initTexture(this.GL.gl,"res/images/texture_spiral1.png"),h.textures.push(h.texture),h.texture=!0,h.shaderProgram=this.initShaders(this.GL.gl,t+"-shader-fs",t+"-shader-vs");h.changeMaterial=function(t){(0,f.RegenerateShader)(this.type+"-shader-fs",t.source.length,t.mix_operation);for(var e=0;e<t.source.length;++e)this.textures.push(L.initTexture(L.GL.gl,t.source[e]));this.shaderProgram=L.initShaders(L.GL.gl,this.type+"-shader-fs",this.type+"-shader-vs")},h.changeShader=function(t,e){RegenerateCustomShader(this.type+"-shader-fs",t.source.length,t.mix_operation,e);for(var r=0;r<t.source.length;++r)this.textures.push(L.initTexture(L.GL.gl,t.source[r]));this.shaderProgram=L.initShaders(L.GL.gl,this.type+"-shader-fs",this.type+"-shader-vs")},h.mvMatrix=mat4.create(),(h.LightMap=void 0)!==i?(h.latitudeBands=i.latitudeBands,h.longitudeBands=i.longitudeBands,h.radius=i.radius):(h.latitudeBands=30,h.longitudeBands=30,h.radius=2),h.geometry=new p.sphereVertex(h),h.instancedDraws={numberOfInstance:10,array_of_local_offset:[12,0,0],overrideDrawArraysInstance:function(t){}},h.glBlend=new c._glBlend,h.shaderProgram&&(this.bufferSphere(h),h.glDrawElements=new c._DrawElements(h.vertexIndexBuffer.numItems),this.contentList[this.contentList.length]=h,m.default.scene[h.name]=h)}if("pyramid"==t&&((s=new Object).name=void 0!==r?r:"pyramid_instance_"+Math.floor(1e5*Math.random()+1),s.streamTextures=null,s.type=t,s.size=e,s.sides=8,s.shaderProgram=this.initShaders(this.GL.gl,t+"-shader-fs",t+"-shader-vs"),s.position=new p.Position(0,0,-5),s.rotation=new p.RotationVector(1,0,0),s.mvMatrix=mat4.create(),s.geometry=new p.PiramideVertex(s),s.instancedDraws={numberOfInstance:10,array_of_local_offset:[12,0,0],overrideDrawArraysInstance:function(t){}},s.glBlend=new c._glBlend,s.shaderProgram&&(this.bufferPyramid(s),s.glDrawElements=new c._DrawElements(s.vertexColorBuffer.numItems),this.contentList[this.contentList.length]=s,m.default.scene[s.name]=s)),"obj"==t){var u=new Object;if(u.name=void 0!==r?r:"obj_instance_"+Math.floor(1e5*Math.random()+1),u.streamTextures=null,u.type=t,u.size=e,u.sides=8,u.shaderProgram=this.initShaders(this.GL.gl,t+"-shader-fs",t+"-shader-vs"),u.position=new p.Position(0,-5,-8),u.rotation=new p.RotationVector(0,1,0),u.color=!1,u.custom=new Object,u.custom.gl_texture=null,u.glDrawElements=new c._DrawElements(i.indexBuffer.numItems),u.glBlend=new c._glBlend,u.LightsData={directionLight:new p.COLOR(5,5,5),ambientLight:new p.COLOR(1,1,1),lightingDirection:new p.COLOR(0,1,0)},void 0!==o){if("string"==typeof o)u.texture=this.initTexture(this.GL.gl,o),u.textures=[],u.textures_texParameteri=[],u.textures[0]=u.texture;else if("object"==typeof o){u.textures=[],u.textures_texParameteri=[],u.texture=!0,(0,f.RegenerateShader)(t+"-shader-fs",o.source.length,o.mix_operation);for(d=0;d<o.source.length;++d)u.textures.push(this.initTexture(this.GL.gl,o.source[d])),u.textures_texParameteri.push(new c._glTexParameteri("TEXTURE_2D","TEXTURE_MAG_FILTER","LINEAR"));u.shaderProgram=this.initShaders(this.GL.gl,t+"-shader-fs",t+"-shader-vs")}}else u.texture=this.initTexture(this.GL.gl,"res/images/texture_spiral1.png"),u.textures=[],u.textures[0]=u.texture;u.LightMap=new p.GeoOfColor("square"),u.changeMaterial=function(t){(0,f.RegenerateShader)(this.type+"-shader-fs",t.source.length,t.mix_operation);for(var e=0;e<t.source.length;++e)this.textures.push(L.initTexture(L.GL.gl,t.source[e]));this.shaderProgram=L.initShaders(L.GL.gl,this.type+"-shader-fs",this.type+"-shader-vs")},u.mvMatrix=mat4.create(),u.animation=void 0===a||null==typeof a?null:{id:a.id,sumOfAniFrames:a.sumOfAniFrames,currentAni:a.currentAni,speed:a.speed,currentDraws:0},u.mesh=i,u.shaderProgram&&(this.bufferObj(u),this.contentList[this.contentList.length]=u,m.default.scene[u.name]=u)}if("cubeTex"==t||"cubeLightTex"==t){if((l=new Object).name=void 0!==r?r:"cube_instance_"+Math.floor(1e5*Math.random()+1),l.streamTextures=null,l.type=t,l.position=new p.Position(0,0,-5),l.size=e,l.sides=12,l.rotation=new p.RotationVector(0,1,0),l.LightsData={directionLight:new p.COLOR(1,1,1),ambientLight:new p.COLOR(1,1,1),lightingDirection:new p.COLOR(1,1,0)},l.textures=[],l.custom=new Object,l.custom.gl_texture=null,void 0!==o){if("string"==typeof o)l.texture=this.initTexture(this.GL.gl,o),l.textures.push(l.texture);else if("object"==typeof o){l.textures=[],l.texture=!0,(0,f.RegenerateShader)(t+"-shader-fs",o.source.length,o.mix_operation);for(d=0;d<o.source.length;++d)l.textures.push(this.initTexture(this.GL.gl,o.source[d]));l.shaderProgram=this.initShaders(this.GL.gl,t+"-shader-fs",t+"-shader-vs")}}else l.texture=this.initTexture(this.GL.gl,"res/images/texture_spiral1.png"),l.textures.push(l.texture),l.texture=!0,l.shaderProgram=this.initShaders(this.GL.gl,t+"-shader-fs",t+"-shader-vs");l.changeMaterial=function(t){(0,f.RegenerateShader)(this.type+"-shader-fs",t.source.length,t.mix_operation);for(var e=0;e<t.source.length;++e)this.textures.push(L.initTexture(L.GL.gl,t.source[e]));this.shaderProgram=L.initShaders(L.GL.gl,this.type+"-shader-fs",this.type+"-shader-vs")},l.mvMatrix=mat4.create(),l.LightMap=new p.GeoOfColor("cube light"),l.geometry=new p.CubeVertex(l),l.instancedDraws={numberOfInstance:10,array_of_local_offset:[12,0,0],overrideDrawArraysInstance:function(t){}},l.glBlend=new c._glBlend,l.shaderProgram&&(this.bufferCube(l),l.glDrawElements=new c._DrawElements(l.vertexIndexBuffer.numItems),this.contentList[this.contentList.length]=l,m.default.scene[l.name]=l)}if("generatorTex"==t||"generatorLightTex"==t){var g=new Object;if(g.name=void 0!==r?r:"customObject_instance_"+Math.floor(1e5*Math.random()+1),g.streamTextures=null,g.type=t,g.position=new p.Position(0,0,-5),g.size=e,g.sides=12,g.rotation=new p.RotationVector(0,1,0),g.LightsData={directionLight:new p.COLOR(1,1,1),ambientLight:new p.COLOR(1,1,1),lightingDirection:new p.COLOR(1,1,0)},g.textures=[],void 0!==o)if("string"==typeof o)g.texture=this.initTexture(this.GL.gl,o),g.textures.push(g.texture);else if("object"==typeof o){g.textures=[],g.texture=!0,(0,f.RegenerateShader)("sphereLightTex-shader-fs",o.source.length,o.mix_operation);for(d=0;d<o.source.length;++d)g.textures.push(this.initTexture(this.GL.gl,o.source[d]));g.shaderProgram=this.initShaders(this.GL.gl,"sphereLightTex-shader-fs","sphereLightTex-shader-vs")}else alert("Exec add obj : texturePaths : path is unknow typeof");else g.texture=this.initTexture(this.GL.gl,"res/images/texture_spiral1.png"),g.textures.push(g.texture),g.texture=!0,g.shaderProgram=this.initShaders(this.GL.gl,"sphereLightTex-shader-fs","sphereLightTex-shader-vs");g.changeMaterial=function(t){(0,f.RegenerateShader)("sphereLightTex-shader-fs",t.source.length,t.mix_operation);for(var e=0;e<t.source.length;++e)this.textures.push(L.initTexture(L.GL.gl,t.source[e]));this.shaderProgram=L.initShaders(L.GL.gl,"sphereLightTex-shader-fs","sphereLightTex-shader-vs")},g.mvMatrix=mat4.create(),(g.LightMap=void 0)!==i?(g.latitudeBands=i.latitudeBands,g.longitudeBands=i.longitudeBands,g.radius=i.radius,g.custom_type=i.custom_type):(g.latitudeBands=30,g.longitudeBands=30,g.radius=2),g.geometry=new p.customVertex(g),g.glBlend=new c._glBlend,g.shaderProgram&&(this.bufferSphere(g),g.glDrawElements=new c._DrawElements(g.vertexIndexBuffer.numItems),this.contentList[this.contentList.length]=g,m.default.scene[g.name]=g)}},L.callReDraw=o.callReDraw_,L.destroy=m.default.operation.destroyWorld,L},r.reDraw=r.objListToDispose=r.world=r.frames=void 0;var m=i(t("../program/manifest")),f=t("./engine"),o=t("./matrix-render"),c=(i(t("./matrix-draws")),t("./utility")),p=t("./matrix-geometry");function i(t){return t&&t.__esModule?t:{default:t}}var a=0;r.frames=a;var L={};r.world=L;var n=new Array;r.objListToDispose=n;var s=null;r.reDraw=s},{"../program/manifest":16,"./engine":4,"./matrix-draws":8,"./matrix-geometry":9,"./matrix-render":10,"./utility":14}],13:[function(t,e,r){"use strict";Object.defineProperty(r,"__esModule",{value:!0}),r.rayIntersectsTriangle=m,r.unproject=f,r.checkingProcedure=function(t){var{clientX:e,clientY:r}=t;g.x=e,g.y=r,g.w=t.target.width,g.h=t.target.height,g.enabled=!0},r.checkingProcedureCalc=function(t){if(0!=g.enabled){console.info("Raycast hits test...");var e,r=t.mvMatrix,o=mat4.create(),i=mat4.create(),a=vec3.fromValues(matrixEngine.Events.camera.xPos,matrixEngine.Events.camera.yPos,matrixEngine.Events.camera.zPos);matrixEngine.Events.camera.zPos<t.position.z&&(a=vec3.fromValues(matrixEngine.Events.camera.xPos,matrixEngine.Events.camera.yPos,-matrixEngine.Events.camera.zPos)),e=f([g.x,g.y],[0,0,g.w,g.h],mat4.invert(o,world.pMatrix),mat4.invert(i,r));for(var n=vec3.create(),s=0;s<t.geometry.indices.length;s+=3){var l=t.geometry.indices[s],d=t.geometry.indices[s+1],h=t.geometry.indices[s+2],h=[[t.geometry.vertices[0+3*l]+t.position.worldLocation[0],t.geometry.vertices[1+3*l]+t.position.worldLocation[1],t.geometry.vertices[2+3*l]],[t.geometry.vertices[0+3*d]+t.position.worldLocation[0],t.geometry.vertices[1+3*d]+t.position.worldLocation[1],t.geometry.vertices[2+3*d]],[t.geometry.vertices[0+3*h]+t.position.worldLocation[0],t.geometry.vertices[1+3*h]+t.position.worldLocation[1],t.geometry.vertices[2+3*h]]];m(a,e,h,n,t.position)&&(u=new CustomEvent("ray.hit.event",{detail:{touchCoordinate:{x:g.x,y:g.y},hitObject:t,intersectionPoint:n,ray:e,rayOrigin:a}}),dispatchEvent(u),1==g.enabled&&(g.enabled=!1),console.info("raycast hits for Object: "+t.name+"  -> face[/3]  : "+s+" -> intersectionPoint: "+n))}}},r.touchCoordinate=void 0;let u,g={enabled:!1,x:0,y:0};function m(t,e,r,o,i){matrixEngine.Events.camera.zPos<i.z?t[2]=matrixEngine.Events.camera.zPos-i.z:t[2]=matrixEngine.Events.camera.zPos+-i.z,t[0]=matrixEngine.Events.camera.xPos,t[1]=matrixEngine.Events.camera.yPos;var[a,n,s]=r,l=vec3.create(),i=vec3.create(),r=vec3.create();vec3.sub(l,n,a),vec3.sub(i,s,a),vec3.cross(r,e,i);n=vec3.dot(l,r);if(-1e-7<n&&n<1e-7)return!1;s=vec3.create();vec3.sub(s,t,a);a=vec3.dot(s,r);if(a<0||n<a)return!1;r=vec3.create();vec3.cross(r,s,l);l=vec3.dot(e,r);if(l<0||n<a+l)return!1;n=vec3.dot(i,r)/n;return 1e-7<n&&(o&&vec3.add(o,t,[e[0]*n,e[1]*n,e[2]*n]),!0)}function f(t,e,r,o){var[i,,a,n]=e,[e,t]=t;const s=vec4.fromValues(2*e/a-1-i,2*(n-t-1)/n-1,1,1);return vec4.transformMat4(s,s,r),s[3]=0,vec4.transformMat4(s,s,o),vec3.normalize(vec3.create(),s)}r.touchCoordinate=g},{}],14:[function(t,e,r){"use strict";Object.defineProperty(r,"__esModule",{value:!0}),r.LOG=function(){this.ENABLE=!0,this.LOG=function(t){1==this.ENABLE&&console.log("%c"+t,"background: #333; color: lime")},this.WARNING=function(t){1==this.ENABLE&&console.log("%c Warning : "+t,"background: #333; color: yellow")},this.CRITICAL=function(t){1==this.ENABLE&&console.log("%c Critical : "+t,"background: #333; color: red")},this.NETWORK_LOG=function(t){1==this.ENABLE&&console.log("%c Network view : "+t,"background: #333; color: #a7afaf")}},r.OSCILLATOR=function(t,e,r){{var o;"string"!=typeof t&&"number"!=typeof t||"string"!=typeof e&&"number"!=typeof e||"string"!=typeof r&&"number"!=typeof r?i.SYS.DEBUG.WARNING("SYS : warning for procedure 'SYS.MATH.OSCILLATOR' Desciption : Replace object with string or number, min >> "+typeof t+" and max >>"+typeof e+" and step >>"+typeof r+" << must be string or number."):((o=this).min=parseFloat(t),this.max=parseFloat(e),this.step=parseFloat(r),this.value_=parseFloat(t),this.status=0,this.on_maximum_value=function(){},this.on_minimum_value=function(){},this.UPDATE=function(t){return void 0===t?0==this.status&&this.value_<this.max?(this.value_=this.value_+this.step,this.value_>=this.max&&(this.value_=this.max,this.status=1,o.on_maximum_value()),this.value_):1==this.status&&this.value_>this.min?(this.value_=this.value_-this.step,this.value_<=this.min&&(this.value_=this.min,this.status=0,o.on_minimum_value()),this.value_):void 0:this.value_})}},r.SWITCHER=function(){var t=this;t.VALUE=1,t.GET=function(){return t.VALUE=-1*t.VALUE,t.VALUE}},r.RandomFloat=function(t,e){return highlightedNumber=Math.random()*(e-t)+t,highlightedNumber},r.randomIntFromTo=function(t,e){if("object"==typeof t||"object"==typeof e)i.SYS.DEBUG.WARNING("SYS : warning for procedure 'SYS.MATH.RANDOM_INT_FROM_TO' Desciption : Replace object with string , this >> "+typeof t+" and "+typeof t+" << must be string or number.");else{if(void 0!==t&&void 0!==e)return Math.floor(Math.random()*(e-t+1)+t);i.SYS.DEBUG.WARNING("SYS : warning for procedure 'SYS.MATH.RANDOM_INT_FROM_TO' Desciption : arguments (min, max) cant be undefined , this >> "+typeof t+" and "+typeof t+" << must be string or number.")}},r._glBlend=function(){var e=this;this.blendEnabled=!1,this.blendParamSrc="ONE",this.blendParamDest="ONE",this.depthParam="NOTEQUAL",this.setBothBlendParam=function(t){e.blendParamSrc=t,e.blendParamDest=t}},r._DrawElements=function(t){this.mode="TRIANGLES",this.modes=["POINTS","LINE_STRIP","LINE_LOOP","LINES","TRIANGLE_STRIP","TRIANGLE_FAN","TRIANGLES"],this.type=["UNSIGNED_BYTE","UNSIGNED_SHORT","UNSIGNED_INT"],this.indices="GL_ELEMENT_ARRAY_BUFFER",this.numberOfIndicesRender=t},r._glTexParameteri=function(t,e,r){this.target=void 0===t?"TEXTURE_2D":t;void 0===e||void 0===r?(this.pname="TEXTURE_MAG_FILTER",this.param="LINEAR"):(this.pname=e,this.param=r)},r.BiquadFilterType=r.ENUMERATORS=r.QueryString=r.E=r.scriptManager=r.loadImage=void 0;var o,a=(o=t("../program/manifest"))&&o.__esModule?o:{default:o},i=t("./events");window.degToRad=function(t){return t*Math.PI/180},window.DETECTBROWSER=function(){var t="unknown";this.NAVIGATOR=navigator.userAgent;var e,r,o=navigator.userAgent,i=o.match(/gecko/gi),a=!!o.match(/Opera|OPR\//),n=o.match(/Tablet/gi),s=o.match(/ipad/gi),l=(o.match(/iphone/gi),o.match(/Firefox/gi)),d=o.match(/mozilla/gi),h=o.match(/Chrome/gi),u=o.match(/safari/gi),g=o.match(/android/gi),m=o.match(/Macintosh/gi),f=0;window.NOMOBILE=0,(e=/iphone|ipad|ipod|android|blackberry|mini|windows\sce|palm/i.test(navigator.userAgent.toLowerCase()))?-1<(r=navigator.userAgent.toLowerCase()).search("android")&&-1<r.search("mobile")?console.log("ANDROID MOBILE"):-1<r.search("android")&&!(-1<r.search("mobile"))&&(console.log(" ANDROID TABLET "),f=1):NOMOBILE=1,l&&g&&0==f&&(t="mobile_firefox_android"),l&&g&&1==f&&(t="mobile_firefox_android_tablet"),a&&g&&(t="opera_mobile_android"),a&&g&&n&&(t="opera_mobile_android_tablet"),u&&(o.match(/iphone/gi)?t="safari_mobile_iphone":s?t="mobile_safari_chrome_ipad":m?t="desktop_safari":g&&(t="android_native")),h&&u&&d&&1==f&&(t="mobile_chrome_android_tablet"),h&&u&&d&&0==f&&(t="mobile_chrome_android"),h&&0==f&&(t="chrome_browser"),d&&1==NOMOBILE&&i&&l&&(t="firefox_desktop"),a&&0==f&&!e&&(t="opera_desktop"),this.NAME=t,this.NOMOBILE=NOMOBILE};r.loadImage=function(t,e){var r=new Image;return r.crossOrigin="anonymous",r.src=t,r.onload=function(){e(r)},r},window.BROWSER=new window.DETECTBROWSER;var n={SCRIPT_ID:0,SINHRO_LOAD:{},LOAD:function(t){var e=document.createElement("script");e.onload=function(){SCRIPT.SCRIPT_ID++,console.log("Script id loaded : "+SCRIPT.SCRIPT_ID+" with src: "+this.src);var t=this.src.substring(this.src.lastIndexOf("/")+1,this.src.lastIndexOf("."));t.replace(".","_")},e.setAttribute("src",t),document.body.appendChild(e)},loadModule:function(t){console.log("Script id load called ");var e=document.createElement("script");e.onload=function(){n.SCRIPT_ID++},e.setAttribute("type","module"),e.setAttribute("src",t),document.body.appendChild(e)}};r.scriptManager=n;function s(t){return document.getElementById(t)}r.E=s;var l=function(){for(var t={},e=window.location.search.substring(1).split("&"),r=0;r<e.length;r++){var o,i=e[r].split("=");void 0===t[i[0]]?t[i[0]]=decodeURIComponent(i[1]):"string"==typeof t[i[0]]?(o=[t[i[0]],decodeURIComponent(i[1])],t[i[0]]=o):t[i[0]].push(decodeURIComponent(i[1]))}return t}();r.QueryString=l,a.default.audioSystem.Assets={},a.default.audioSystem.createVideoAsset=function(o,i){return new Promise((e,r)=>{var t={};t.video=document.createElement("video"),t.video.controls=!0,t.video.autoplay=!0,s("HOLDER_STREAMS").appendChild(t.video),t.video.setAttribute("playsInline",!0),t.video.setAttribute("src","res/videos/"+i);try{window.AudioContext=window.AudioContext||window.webkitAudioContext,t.context=new AudioContext}catch(t){alert("Web Audio API is not supported in this browser")}t.gainNode=t.context.createGain(),t.gainNode.gain.value=1,t.filter=t.context.createBiquadFilter(),t.filter.frequency.value=5040,void 0!==o&&"string"==typeof o?a.default.audioSystem.Assets[o]=t:console.warn("No name argument in createVideoAsset call.");t=t.video.play();void 0!==t&&t.then(t=>{console.info("intromotocooliano autoplay started"),e(!0)}).catch(t=>{console.warn("No autoplay ",t),r()})})},r.ENUMERATORS={glTexParameter:{target:{GL_TEXTURE_2D:"GL_TEXTURE_2D",GL_TEXTURE_3D:"GL_TEXTURE_3D",GL_TEXTURE_2D_ARRAY:"GL_TEXTURE_2D_ARRAY",GL_TEXTURE_CUBE_MAP:"GL_TEXTURE_CUBE_MAP"},pname:{GL_TEXTURE_BASE_LEVEL:"TEXTURE_BASE_LEVEL",GL_TEXTURE_COMPARE_FUNC:"TEXTURE_COMPARE_FUNC",GL_TEXTURE_COMPARE_MODE:"TEXTURE_COMPARE_MODE",GL_TEXTURE_MIN_FILTER:"TEXTURE_MIN_FILTER",GL_TEXTURE_MAG_FILTER:"TEXTURE_MAG_FILTER",GL_TEXTURE_MIN_LOD:"TEXTURE_MIN_LOD",GL_TEXTURE_MAX_LOD:"TEXTURE_MAX_LOD",GL_TEXTURE_MAX_LEVEL:"TEXTURE_MAX_LEVEL",GL_TEXTURE_SWIZZLE_R:"TEXTURE_SWIZZLE_R",GL_TEXTURE_SWIZZLE_G:"TEXTURE_SWIZZLE_G",GL_TEXTURE_SWIZZLE_B:"TEXTURE_SWIZZLE_B",GL_TEXTURE_SWIZZLE_A:"TEXTURE_SWIZZLE_A",GL_TEXTURE_WRAP_S:"TEXTURE_WRAP_S",GL_TEXTURE_WRAP_T:"TEXTURE_WRAP_T",GL_TEXTURE_WRAP_R:"TEXTURE_WRAP_R"},param:{BASE_LEVEL:"",COMPARE_FUNC:"",COMPARE_MODE:"",MIN_FILTER:"",MAG_FILTER:{NEAREST:"NEAREST",LINEAR:"LINEAR"},MIN_LOD:"",MAX_LOD:"",MAX_LEVEL:"",SWIZZLE_R:{RED:"RED",GREEN:"GREEN",BLUE:"BLUE",ALPHA:"ALPHA",ZERO:"ZERO",ONE:"ONE"},SWIZZLE_G:{RED:"RED",GREEN:"GREEN",BLUE:"BLUE",ALPHA:"ALPHA",ZERO:"ZERO",ONE:"ONE"},SWIZZLE_B:{RED:"RED",GREEN:"GREEN",BLUE:"BLUE",ALPHA:"ALPHA",ZERO:"ZERO",ONE:"ONE"},SWIZZLE_A:{RED:"RED",GREEN:"GREEN",BLUE:"BLUE",ALPHA:"ALPHA",ZERO:"ZERO",ONE:"ONE"},WRAP_S:{CLAMP_TO_EDGE:"CLAMP_TO_EDGE",MIRRORED_REPEAT:"MIRRORED_REPEAT",GL_REPEAT:"GL_REPEAT"},WRAP_T:{CLAMP_TO_EDGE:"CLAMP_TO_EDGE",MIRRORED_REPEAT:"MIRRORED_REPEAT",GL_REPEAT:"GL_REPEAT"},WRAP_R:{CLAMP_TO_EDGE:"CLAMP_TO_EDGE",MIRRORED_REPEAT:"MIRRORED_REPEAT",GL_REPEAT:"GL_REPEAT"}}},glDrawElements:{help:function(){i.SYS.DEBUG.WARNING("C specification: void glDrawElements(  GLenum mode , GLsizei count , GLenum type , const GLvoid * indices ); "),i.SYS.DEBUG.WARNING(">>>mode can be : 'POINTS' , 'LINE_STRIP', 'LINE_LOOP', 'LINES', 'TRIANGLE_STRIP', 'TRIANGLE_FAN' , 'TRIANGLES' "),i.SYS.DEBUG.WARNING(">>>count    : Specifies the number of elements to be rendered."),i.SYS.DEBUG.WARNING(">>>type    : 'UNSIGNED_BYTE' , 'UNSIGNED_SHORT' , 'UNSIGNED_INT' ")},mode:["POINTS","LINE_STRIP","LINE_LOOP","LINES","TRIANGLE_STRIP","TRIANGLE_FAN","TRIANGLES"],type:["UNSIGNED_BYTE","UNSIGNED_SHORT","UNSIGNED_INT"],indices:"GL_ELEMENT_ARRAY_BUFFER"},glBlend:{param:["ZERO","ONE","SRC_COLOR","DST_COLOR","ONE_MINUS_SRC_COLOR","ONE_MINUS_DST_COLOR","SRC_ALPHA","DST_ALPHA","ONE_MINUS_SRC_ALPHA","ONE_MINUS_DST_ALPHA","SRC_ALPHA_SATURATE"]},glDepth:{param:["NEVER","ALWAYS","LESS","GREATER","EQUAL","LEQUAL","NOTEQUAL","GEQUAL"],returnParam:{NEVER:function(){return"NEVER"},ALWAYS:function(){return"ALWAYS"},LESS:function(){return"LESS"},GREATER:function(){return"GREATER"},EQUAL:function(){return"EQUAL"},LEQUAL:function(){return"LEQUAL"},NOTEQUAL:function(){return"NOTEQUAL"},GEQUAL:function(){return"GEQUAL"}}},getTexParameter:function(){i.SYS.DEBUG.LOG(" TEXTURE_IMMUTABLE_FORMAT VALUE : "+world.GL.gl.getTexParameter(world.GL.gl.TEXTURE_2D,world.GL.gl.TEXTURE_IMMUTABLE_FORMAT))}};r.BiquadFilterType={lowpass:"lowpass",highpass:"highpass",bandpass:"bandpass",lowshelf:"lowshelf",highshelf:"highshelf",peaking:"peaking",notch:"notch",allpass:"allpass"}},{"../program/manifest":16,"./events":5}],15:[function(t,e,r){"use strict";Object.defineProperty(r,"__esModule",{value:!0}),r.WebGLUtils=void 0;var o,i={create3DContext:o=function(t,e){for(var r=["webgl2"],o=null,i=0;i<r.length;++i){try{o=t.getContext(r[i],e)}catch(t){}if(o)break}return o},setupWebGL:function(t,e,r){r=r||function(t){var e,r=document.getElementsByTagName("body")[0];r&&(e=window.WebGLRenderingContext?'It doesn\'t appear your computer can support WebGL.<br/><a href="http://get.webgl.org">Click here for more information.</a>':'This page requires a browser that supports WebGL.<br/><a href="http://get.webgl.org">Click here to upgrade your browser.</a>',t&&(e+="<br/><br/>Status: "+t),r.innerHTML='<div style="margin: auto; width:500px;z-index:10000;margin-top:20em;text-align:center;">'+e+"</div>")},t.addEventListener&&t.addEventListener("webglcontextcreationerror",function(t){r(t.statusMessage)},!1);e=o(t,e);return e||(window.WebGLRenderingContext,r("")),e}};r.WebGLUtils=i,window.requestAnimationFrame||(window.requestAnimationFrame=window.requestAnimationFrame||window.webkitRequestAnimationFrame||window.mozRequestAnimationFrame||window.oRequestAnimationFrame||window.msRequestAnimationFrame||function(t,e){window.setTimeout(t,1e3/60)})},{}],16:[function(t,e,r){"use strict";Object.defineProperty(r,"__esModule",{value:!0}),r.default=void 0;r.default={name:"Matrix Engine Manifest",version:"1.0.6",events:!0,logs:!1,draw_interval:10,antialias:!1,camera:{viewAngle:45,nearViewpoint:.1,farViewpoint:1e3,edgeMarginValue:100,FirstPersonController:!1,speedAmp:.5},raycast:!0,resize:{canvas:"full-screen",aspectRatio:1.8},glBackgroundColor:{r:0,g:0,b:0,a:1},textures:[],tools:{},operation:{},commonObject:{},dynamicBuffer:!0,scene:{},meshes:{},limitations:{maxTexturesInFragmentShader:null},updateBeforeDraw:[],audioSystem:{},pwa:{addToHomePage:!0},ready:!1,onload:function(){}}},{}]},{},[1]);
